RELATED APPLICATION DATA This application is a divisional of application Ser. No. 12/271,692, filed Nov. 14, 2008, which claims priority to provisional applications 61/090,083, filed Aug. 19, 2008; 61/096,703, filed Sep. 12, 2008; 61/100,643, filed Sep. 26, 2008; 61/103,907, filed Oct. 8, 2008; and 61/110,490, filed Oct. 31, 2008. The disclosures of these applications are incorporated herein by reference. BACKGROUND U.S. Pat. No. 6,947,571 shows a system in which a cell phone camera captures content (e.g., image data), and processes same to derive an identifier. This identifier is submitted to a data structure (e.g., a remote database), which indicates corresponding data or actions. The cell phone then displays responsive information, or takes responsive action. Such sequence of operations is sometimes referred to as “visual search.” Related technologies are shown in patent publications 20070175998, 20060240862, 20060056707, 20060026140, 20060012677, 20050227674, 20050185060, 20050144455, 20040199387, 20030083098, 20020178410, 20020152388, 20020102966, 20020072982, 20010055391, 20010001854, in U.S. Pat. Nos. 7,251,475, 7,174,293, 7,065,559, 7,016,532, 6,993,573, 6,941,275, 6,788,293, 6,766,363, 6,675,165, 6,491,217, 6,389,055, 6,199,048, 6,121,530, 6,002,946 and in patent application Ser. No. 11/941,268, filed Nov. 16, 2007. The presently-detailed technology concerns improvements to such technologies—moving towards the goal of intuitive computing: devices that can see and/or hear, and infer the user's desire in that sensed context. BRIEF DESCRIPTION OF THE DRAWINGS FIG. 1 shows an image of a desktop telephone captured by a cell phone camera. FIG. 2 shows a collection of similar images found in a repository of public images, by reference to characteristics discerned from the image of FIG. 1. FIGS. 3-8, and 10-14 are flow diagrams detailing methods incorporating aspects of the present technology. FIG. 9 is an arty shot of the Eiffel Tower, captured by a cell phone user. FIG. 15 is another image captured by a cell phone user. FIG. 16 is an image of an underside of a telephone, discovered using methods according to aspects of the present technology. FIGS. 17A and 17B illustrate different linking topologies. FIG. 18 is an image captured by a cell phone user, depicting an Appalachian Trail trail marker. FIGS. 19-23 detail methods incorporating aspects of the present technology. FIG. 24 shows the user interface of one style of cell phone. FIGS. 25A and 25B illustrate how different dimensions of commonality may be explored through use of a user interface control of a cell phone. FIGS. 26A and 26B detail a particular method incorporating aspects of the present technology, by which keywords such as Prometheus and Paul Manship are automatically determined from a cell phone image. FIG. 27 shows some of the different data sources that may be consulted in processing imagery according to aspects of the present technology. FIGS. 28A, 28B and 29 show different processing methods according to aspects of the present technology. FIG. 30 identifies some of the different processing that may be performed on image data, in accordance with aspects of the present technology. FIG. 31 shows an illustrative tree structure that can be employed in accordance with certain aspects of the present technology. FIG. 32 shows a network of wearable computers (e.g., cell phones) that can cooperate with each other, e.g., in a peer-to-peer network. FIGS. 33-35 detail how a glossary of signs can be identified by a cell phone, and used to trigger different actions. FIG. 36 illustrates aspects of prior art digital camera technology. FIG. 37 details an embodiment incorporating aspects of the present technology. FIG. 38 shows how a cell phone can be used to sense and display affine parameters. FIG. 39 illustrates certain state machine aspects of the present technology. FIG. 40 illustrates how even “still” imagery can include temporal, or motion, aspects. FIG. 41 shows some metadata that may be involved in an implementation incorporating aspects of the present technology. FIG. 42 shows an image captured by a cell phone camera user. FIGS. 43-46 detail how the image of FIG. 42 can be processed to convey semantic metadata. FIG. 47 shows another image that may be captured by a cell phone camera user. FIGS. 48 and 49 detail how the image of FIG. 47 can be processed to convey semantic metadata. FIG. 50 shows an image that may be captured by a cell phone camera user. FIG. 51 details how the image of FIG. 50 can be processed to convey semantic metadata. FIG. 52 is a chart showing aspects of the human visual system. FIG. 53 shows different low, mid and high frequency components of an image. FIG. 54 shows a newspaper page. FIG. 55 shows the layout of the FIG. 54 page, as set by layout software. FIG. 56 details how user interaction with imagery captured from printed text may be enhanced. FIGS. 56A and 56B illustrate how semantic conveyance of metadata can have a progressive aspect, akin to JPEG2000 and the like. DISCUSSION Collections of publicly-available imagery and other content are becoming more prevalent. Flickr, YouTube, Photobucket (MySpace), Picasa, Zooomr, FaceBook, Webshots and Google Images are just a few. Often, these resources can also serve as sources of metadata—either expressly identified as such, or inferred from data such as file names, descriptions, etc. Sometimes geo-location data is also available. An illustrative embodiment according to one aspect of the present technology works as follows. A user takes a cell phone picture of an object, or scene—perhaps a desk telephone, as shown in FIG. 1. (The image may be acquired in other manners as well, such as transmitted from another user.) As a preliminary operation, known image processing operations may be applied, e.g., to correct color or contrast, to perform ortho-normalization, etc. Known image object segmentation or classification techniques may also be used to identify an apparent subject region of the image, and isolate same for further processing. The image data is then processed to determine characterizing features that are useful in pattern matching and recognition. Color, shape, and texture metrics are commonly used for this purpose. Images may also be grouped based on layout and eigenvectors (the latter being particularly popular for facial recognition). Many other technologies can of course be employed, as noted below. (Uses of vector characterizations/classifications and other image/video/audio metrics in recognizing faces, imagery, video, audio and other patterns are well known and suited for use in connection with the present technology. See, e.g., patent publications 20070239756, 20070237364, 20070058865, 20060020630, 20050267817, 20050180635, 20040243567, 20030126121, 20030059124, 20020037083, U.S. Pat. Nos. 7,359,889, 7,194,752, 7,174,293, 7,130,466, 6,990,453, 6,681,032, 6,553,136, 6,430,307, 6,430,306, 6,072,894, and 4,776,017, and the journal references cited at the end of this disclosure. When used in conjunction with recognition of entertainment content such as audio and video, such features are sometimes termed content “fingerprints” or “hashes.”) After feature metrics for the cell phone image are determined, a search is conducted through one or more publicly-accessible image repositories for images with similar metrics, thereby identifying apparently similar images. (As part of its image ingest process, Flickr and other such repositories may calculate eigenvectors or other classification data on images at the time they are uploaded by users, and collect same in an index for public search.) The search may yield the collection of apparently similar telephone images found in Flickr, depicted in FIG. 2. Metadata is then harvested from Flickr for each of these images, and the descriptive terms are parsed and ranked by frequency of occurrence. In the depicted set of images, for example, the descriptors harvested from such operation, and their incidence of occurrence, may be as follows: Cisco (18) Phone (10) Telephone (7) VOIP (7) IP (5) 7941 (3) Phones (3) Technology (3) 7960 (2) 7920 (1) 7950 (1) Best Buy (1) Desk (1) Ethernet (1) IP-phone (1) Office (1) Pricey (1) Sprint (1) Telecommunications (1) Uninett (1) Work (1) From this aggregated set of inferred metadata, it may be assumed that those terms with the highest count values (e.g., those terms occurring most frequently) are the terms that most accurately characterize the user's FIG. 1 image. The inferred metadata can be augmented or enhanced, if desired, by known image recognition/classification techniques. Such technology seeks to provide automatic recognition of objects depicted in images. For example, by recognizing a TouchTone keypad layout, and a coiled cord, such a classifier may label the FIG. 1 image using the terms Telephone and Facsimile Machine. If not already present in the inferred metadata, the terms returned by the image classifier can be added to the list and given a count value. (An arbitrary value, e.g., 2, may be used, or a value dependent on the classifier's reported confidence in the discerned identification can be employed.) If the classifier yields one or more terms that are already present, the position of the term(s) in the list may be elevated. One way to elevate a term's position is by increasing its count value by a percentage (e.g., 30%). Another way is to increase its count value to one greater than the next-above term that is not discerned by the image classifier. (Since the classifier returned the term “Telephone” but not the term “Cisco,” this latter approach could rank the term Telephone with a count value of “19”—one above Cisco.) A variety of other techniques for augmenting/enhancing the inferred metadata with that resulting from the image classifier are straightforward to implement. A revised listing of metadata, resulting from the foregoing, may be as follows: Telephone (19) Cisco (18) Phone (10) VOIP (7) IP (5) 7941 (3) Phones (3) Technology (3) 7960 (2) Facsimile Machine (2) 7920 (1) 7950 (1) Best Buy (1) Desk (1) Ethernet (1) IP-phone (1) Office (1) Pricey (1) Sprint (1) Telecommunications (1) Uninett (1) Work (1) The list of inferred metadata can be restricted to those terms that have the highest apparent reliability, e.g., count values. A subset of the list comprising, e.g., the top N terms, or the terms in the top Mth percentile of the ranked listing, may be used. This subset can be associated with the FIG. 1 image in a metadata repository for that image, as inferred metadata. In the present example, if N=4, the terms Telephone, Cisco, Phone and VOIP are associated with the FIG. 1 image. Once a list of metadata is assembled for the FIG. 1 image (by the foregoing procedure, or others), a variety of operations can be undertaken. One option is to submit the metadata, along with the captured content or data derived from the captured content (e.g., the FIG. 1 image, image feature data such as eigenvalues, machine readable data decoded from the image, etc), to a service provider that acts on the submitted data, and provides a response to the user. Shazam, Snapnow, ClusterMedia Labs, Snaptell, Mobot, Mobile Acuity and Digimarc Mobile, are a few of several commercially available services that capture media content, and provide a corresponding response; others are detailed in the earlier-cited patent publications. By accompanying the content data with the metadata, the service provider can make a more informed judgment as to how it should respond to the user's submission. The service provider—or the user's device—can submit the metadata descriptors to one or more other services, e.g., a web search engine such as Google, to obtain a richer set of auxiliary information that may help better discern/infer/intuit an appropriate desired by the user. Or the information obtained from Google (or other such database resource) can be used to augment/refine the response delivered by the service provider to the user. (In some cases, the metadata—possibly accompanied by the auxiliary information received from Google—can allow the service provider to produce an appropriate response to the user, without even requiring the image data.) In some cases, one or more images obtained from Flickr may be substituted for the user's image. This may be done, for example, if a Flickr image appears to be of higher quality (using sharpness, illumination histogram, or other measures), and if the image metrics are sufficiently similar. (Similarity can be judged by a distance measure appropriate to the metrics being used. One embodiment checks whether the distance measure is below a threshold. If several alternate images pass this screen, then the closest image is used.) Or substitution may be used in other circumstances. The substituted image can then be used instead of (or in addition to) the cell phone image in the arrangements detailed herein. In one such arrangement, the substitute image data is submitted to the service provider. In another, data for several substitute images are submitted. In another, the original image data—together with one or more alternative sets of image data—are submitted. In the latter two cases, the service provider can use the redundancy to help reduce the chance of error—assuring an appropriate response is provided to the user. (Or the service provider can treat each submitted set of image data individually, and provide plural responses to the user. The client software on the cell phone can then assess the different responses, and pick between them (e.g., by a voting arrangement), or combine the responses, to help provide the user an enhanced response.)) Instead of substitution, one or more closely-matching public image(s) may be composited or merged with the user's cell phone image. The resulting hybrid image can then be used in the different contexts detailed in this disclosure. A still further option is to use apparently-similar images gleaned from Flickr to inform enhancement of the user's image. Examples include color correction/matching, contrast correction, glare reduction, removing foreground/background objects, etc. By such arrangement, for example, such a system may discern that the FIG. 1 image has foreground components (apparently Post-It notes) on the telephone that should be masked or disregarded. The user's image data can be enhanced accordingly, and the enhanced image data used thereafter. Relatedly, the user's image may suffer some impediment, e.g., such as depicting its subject from an odd perspective, or with poor lighting, etc. This impediment may cause the user's image not to be recognized by the service provider (i.e., the image data submitted by the user does not seem to match any image data in the database being searched). Either in response to such a failure, or proactively, data from similar images identified from Flickr may be submitted to the service provider as alternatives—hoping they might work better. Another approach—one that opens up many further possibilities—is to search Flickr for one or more images with similar image metrics, and collect metadata as described herein (e.g., Telephone, Cisco, Phone, VOIP). Flickr is then searched a second time, based on metadata. Plural images with similar metadata can thereby be identified. Data for these further images (including images with a variety of different perspectives, different lighting, etc.) can then be submitted to the service provider—notwithstanding that they may “look” different than the user's cell phone image. When doing metadata-based searches, identity of metadata may not be required. For example, in the second search of Flickr just-referenced, four terms of metadata may have been associated with the user's image: Telephone, Cisco, Phone and VOIP. A match may be regarded as an instance in which a subset (e.g., three) of these terms is found. Another approach is to rank matches based on the rankings of shared metadata terms. An image tagged with Telephone and Cisco would thus be ranked as a better match than an image tagged with Phone and VOIP. One adaptive way to rank a “match” is to sum the counts for the metadata descriptors for the user's image (e.g., 19+18+10+7=54), and then tally the count values for shared terms in a Flickr image (e.g., 35, if the Flickr image is tagged with Cisco, Phone and VOIP). The ratio can then be computed (35/54) and compared to a threshold (e.g., 60%). In this case, a “match” is found. A variety of other adaptive matching techniques can be devised by the artisan based on the foregoing. The above examples searched Flickr for images based on similarity of image metrics, and optionally on similarity of textual (semantic) metadata. Geolocation data (e.g., GPS tags) can also be used to get a metadata toe-hold. If the user captures an arty, abstract shot of the Eiffel tower from amid the metalwork or another unusual vantage point (e.g., FIG. 9), it may not be recognized—from image metrics—as the Eiffel tower. But GPS info captured with the image identifies the location of the image subject. Public databases (including Flickr) can be employed to retrieve textual metadata based on GPS descriptors. Inputting GPS descriptors for the photograph yields the textual descriptors Paris and Eiffel. Google Images, or another database, can be queried with the terms Eiffel and Paris to retrieve other, more perhaps conventional images of the Eiffel tower. One or more of those images can be submitted to the service provider to drive its process. (Alternatively, the GPS information from the user's image can be used to search Flickr for images from the same location; yielding imagery of the Eiffel Tower that can be submitted to the service provider.) Although GPS is gaining in camera-metadata-deployment, most imagery presently in Flickr and other public databases is missing geolocation info. But GPS info can be automatically propagated across a collection of imagery that share visible features (by image metrics such as eigenvalues, or other classification techniques), or that have a metadata match. To illustrate, if the user takes a cell phone picture of a city fountain, and the image is tagged with GPS information, it can be submitted to a process that identifies matching Flickr/Google images of that fountain on a feature-recognition basis. To each of those images the process can add GPS information from the user's image. A second level of searching can also be employed. From the set of fountain images identified from the first search based on similarity of appearance, metadata can be harvested and ranked, as above. Flickr can then be searched a second time, for images having metadata that matches within a specified threshold (e.g., as reviewed above). To those images, too, GPS information from the user's image can be added. Alternatively, or in addition, a first set of images in Flickr/Google similar to the user's image of the fountain can be identified—not by pattern matching, but by GPS-matching (or both). Metadata can be harvested and ranked from these GPS-matched images. Flickr can be searched a second time for a second set of images with similar metadata. To this second set of images, GPS information from the user's image can be added. Another approach to geolocating imagery is by searching Flickr for images having similar image characteristics (gist, color histogram, etc.), and assessing geolocation data in the identified images to infer the probable location of the original image. See, e.g., Hays, et al, IM2GPS: Estimating geographic information from a single image, Proc. of the IEEE Conf. on Computer Vision and Pattern Recognition, 2008. Techniques detailed in the Hays paper are suited for use in conjunction with the present technology (including use of probability functions as quantizing the uncertainty of inferential techniques). When geolocation data is captured by the camera, it is highly reliable. Also generally reliable is metadata (location or otherwise) that is authored by the proprietor of the image. However, when metadata descriptors (geolocation or semantic) are inferred or estimated, or authored by a stranger to the image, uncertainty and other issues arise. Desirably, such intrinsic uncertainty should be memorialized in some fashion so that later users thereof (human or machine) can take this uncertainty into account. One approach is to segregate uncertain metadata from device-authored or creator-authored metadata. For example, different data structures can be used. Or different tags can be used to distinguish such classes of information. Or each metadata descriptor can have its own sub-metadata, indicating the author, creation date, and source of the data. The author or source field of the sub-metadata may have a data string indicating that the descriptor was inferred, estimated, deduced, etc., or such information may be a separate sub-metadata tag. Each uncertain descriptor may be given a confidence metric or rank. This data may be determined by the public, either expressly or inferentially. An example is the case when a user sees a Flickr picture she believes to be from Yellowstone, and adds a “Yellowstone” location tag, together with a “95%” confidence tag (her estimation of certainty about the contributed location metadata). She may add an alternate location metatag, indicating “Montana,” together with a corresponding 50% confidence tag. (The confidence tags needn't sum to 100%. Just one tag can be contributed—with a confidence less than 100%. Or several tags can be contributed—possibly overlapping, as in the case with Yellowstone and Montana). If several users contribute metadata of the same type to an image (e.g., location metadata), the combined contributions can be assessed to generate aggregate information. Such information may indicate, for example, that 5 of 6 users who contributed metadata tagged the image as Yellowstone, with an average 93% confidence; that 1 of 6 users tagged the image as Montana, with a 50% confidence, and 2 of 6 users tagged the image as Glacier National park, with a 15% confidence, etc. Inferential determination of metadata reliability can be performed, either when express estimates made by contributors are not available, or routinely. An example of this is the FIG. 1 photo case, in which metadata occurrence counts are used to judge the relative merit of each item of metadata (e.g., Telephone=19 or 7, depending on the methodology used). Similar methods can be used to rank reliability when several metadata contributors offer descriptors for a given image. Crowd-sourcing techniques are known to parcel image-identification tasks to online workers, and collect the results. However, prior art arrangements are understood to seek simple, short-term consensus on identification. Better, it seems, is to quantify the diversity of opinion collected about image contents (and optionally its variation over time, and information about the sources relied-on), and use that richer data to enable automated systems to make more nuanced decisions about imagery, its value, its relevance, its use, etc. To illustrate, known crowd-sourcing image identification techniques may identify the FIG. 15 image with the identifiers “soccer ball” and “dog.” These are the consensus terms from one or several viewers. Disregarded, however, may be information about the long tail of alternative descriptors, e.g., summer, Labrador, football, tongue, afternoon, evening, morning, fescue, etc. Also disregarded may be demographic and other information about the persons (or processes) that served as metadata identifiers, or the circumstances of their assessments. A richer set of metadata may associate with each descriptor a set of sub-metadata detailing this further information. The sub-metadata may indicate, for example, that the tag “football” was contributed by a 21 year old male in Brazil on Jun. 18, 2008. It may further indicate that the tags “afternoon,” “evening” and “morning” were contributed by an automated image classifier at the University of Texas that made these judgments on Jul. 2, 2008 based, e.g., on the angle of illumination on the subjects. Those three descriptors may also have associated probabilities assigned by the classifier, e.g., 50% for afternoon, 30% for evening, and 20% for morning (each of these percentages may be stored as a sub-metatag). One or more of the metadata terms contributed by the classifier may have a further sub-tag pointing to an on-line glossary that aids in understanding the assigned terms. For example, such as sub-tag may give the URL of a computer resource that associates the term “afternoon” with a definition, or synonyms, indicating that the term means noon to 7 pm. The glossary may further indicate a probability density function, indicating that the mean time meant by “afternoon” is 3:30 pm, the median time is 4:15 pm, and the term has a Gaussian function of meaning spanning the noon to 7 pm time interval. Expertise of the metadata contributors may also be reflected in sub-metadata. The term “fescue” may have sub-metadata indicating it was contributed by a 45 year old grass seed farmer in Oregon. An automated system can conclude that this metadata term was contributed by a person having unusual expertise in a relevant knowledge domain, and may therefore treat the descriptor as highly reliable (albeit maybe not highly relevant). This reliability determination can be added to the metadata collection, so that other reviewers of the metadata can benefit from the automated system's assessment. Assessment of the contributor's expertise can also be self-made by the contributor. Or it can be made otherwise, e.g., by reputational rankings using collected third party assessments of the contributor's metadata contributions. (Such reputational rankings are known, e.g., from public assessments of sellers on EBay, and of book reviewers on Amazon.) Assessments may be field-specific, so a person may be judged (or self-judged) to be knowledgeable about grass types, but not about dog breeds. Again, all such information is desirably memorialized in sub-metatags (including sub-sub-metatags, when the information is about a sub-metatag). More information about crowd-sourcing, including use of contributor expertise, etc., is found in published patent application 20070162761. Returning to the case of geolocation descriptors (which may be numeric, e.g., latitude/longitude, or textual), an image may accumulate—over time—a lengthy catalog of contributed geographic descriptors. An automated system (e.g., a server at Flickr) may periodically review the contributed geotag information, and distill it to facilitate public use. For numeric information, the process can apply known clustering algorithms to identify clusters of similar coordinates, and average same to generate a mean location for each cluster. For example, a photo of a geyser may be tagged by some people with latitude/longitude coordinates in Yellowstone, and by others with latitude/longitude coordinates of Hells Gate Park in New Zealand. These coordinates thus form distinct two clusters that would be separately averaged. If 70% of the contributors placed the coordinates in Yellowstone, the distilled (averaged) value may be given a confidence of 70%. Outlier data can be maintained, but given a low probability commensurate with its outlier status. Such distillation of the data by a proprietor can be stored in metadata fields that are readable by the public, but not writable. The same or other approach can be used with added textual metadata—e.g., it can be accumulated and ranked based on frequency of occurrence, to give a sense of relative confidence. The technology detailed in this specification finds numerous applications in contexts involving watermarking, bar-coding, fingerprinting, OCR-decoding, and other approaches for obtaining information from imagery. Consider again the FIG. 1 cell phone photo of a desk phone. Flickr can be searched based on image metrics to obtain a collection of subject-similar images (e.g., as detailed above). A data extraction process (e.g., watermark decoding, fingerprint calculation, barcode- or OCR-reading) can be applied to some or all of the resulting images, and information gleaned thereby can be added to the metadata for the FIG. 1 image, and/or submitted to a service provider with image data (either for the FIG. 1 image, and/or for related images). From the collection of images found in the first search, text or GPS metadata can be harvested, and a second search can be conducted for similarly-tagged images. From the text tags Cisco and VOIP, for example, a search of Flickr may find a photo of the underside of the user's phone—with OCR-readable data—as shown in FIG. 16. Again, the extracted information can be added to the metadata for the FIG. 1 image, and/or submitted to a service provider to enhance the response it is able to provide to the user. As just shown, a cell phone user may be given the ability to look around corners and under objects—by using one image as a portal to a large collection of related images. User Interface Referring to FIGS. 24 and 25A, cell phones and related portable devices 10 typically include a display 11 and a keypad 12. In addition to a numeric (or alphanumeric) keypad there is often a multi-function controller 14. One popular controller has a center button 18, and four surrounding buttons 16 a, 16 b, 16 c and 16 d. An illustrative usage model is as follows. A system responds to an image 28 (either optically captured or wirelessly received) by displaying a collection of related images to the user, on the cell phone display. For example, the user captures an image and submits it to a remote service. The service determines image metrics for the submitted image (possibly after pre-processing, as detailed above), and searches (e.g., Flickr) for visually similar images. These images are transmitted to the cell phone (e.g., by the service, or directly from Flickr), and they are buffered for display. The service can prompt the user, e.g., by instructions presented on the display, to repeatedly press the right-arrow button 16 b on the four-way controller (or press-and-hold) to view a sequence of pattern-similar images (30, FIG. 25A). Each time the button is pressed, another one of the buffered apparently-similar images is displayed. By techniques like those earlier described, or otherwise, the remote service can also search for images that are similar in geolocation to the submitted image. These too can be sent to and buffered at the cell phone. The instructions may advise that the user can press the left-arrow button 16 d of the controller to review these GPS-similar images (32, FIG. 25A). Similarly, the service can search for images that are similar in metadata to the submitted image (e.g., based on textual metadata inferred from other images, identified by pattern matching or GPS matching). Again, these images can be sent to the phone and buffered for immediate display. The instructions may advise that the user can press the up-arrow button 16 a of the controller to view these metadata-similar images (34, FIG. 25A). Thus, by pressing the right, left, and up buttons, the user can review images that are similar to the captured image in appearance, location, or metadata descriptors. Whenever such review reveals a picture of particular interest, the user can press the down button 16 c. This action identifies the currently-viewed picture to the service provider, which then can repeat the process with the currently-viewed picture as the base image. The process then repeats with the user-selected image as the base, and with button presses enabling review of images that are similar to that base image in appearance (16 b), location (16 d), or metadata (16 a). This process can continue indefinitely. At some point the user can press the center button 18 of the four-way controller. This action submits the then-displayed image to a service provider for further action (e.g., triggering a corresponding response, as disclosed, e.g., in earlier-cited documents). This action may involve a different service provider than the one that provided all the alternative imagery, or they can be the same. (In the latter case the finally-selected image need not be sent to the service provider, since that service provider knows all the images buffered by the cell phone, and may track which image is currently being displayed.) The dimensions of information browsing just-detailed (similar-appearance images; similar-location images; similar-metadata images) can be different in other embodiments. Consider, for example, an embodiment that takes an image of a house as input (or latitude/longitude), and returns the following sequences of images: (a) the houses for sale nearest in location to the input-imaged house; (b) the houses for sale nearest in price to the input-imaged house; and (c) the houses for sale nearest in features (e.g., bedrooms/baths) to the input-imaged house. (The universe of houses displayed can be constrained, e.g., by zip-code, metropolitan area, school district, or other qualifier.) Another example of this user interface technique is presentation of search results from EBay for auctions listing Xbox 360 game consoles. One dimension can be price (e.g., pushing button 16 b yields a sequence of screens showing Xbox 360 auctions, starting with the lowest-priced ones); another can be seller's geographical proximity to user (closest to furthest, shown by pushing button 16 d); another can be time until end of auction (shortest to longest, presented by pushing button 16 a). Pressing the middle button 18 can load the full web page of the auction being displayed. A related example is a system that responds to a user-captured image of a car by identifying the car (using image features and associated database(s)), searching EBay and Craigslist for similar cars, and presenting the results on the screen. Pressing button 16 b presents screens of information about cars offered for sale (e.g., including image, seller location, and price) based on similarity to the input image (same model year/same color first, and then nearest model years/colors), nationwide. Pressing button 16 d yields such a sequence of screens, but limited to the user's state (or metropolitan region, or a 50 mile radius of the user's location, etc). Pressing button 16 a yields such a sequence of screens, again limited geographically, but this time presented in order of ascending price (rather than closest model year/color). Again, pressing the middle button loads the full web page (EBay or Craigslist) of the car last-displayed. Another embodiment is an application that helps people recall names. A user sees a familiar person at a party, but can't remember his name. Surreptitiously the user snaps a picture of the person, and the image is forwarded to a remote service provider. The service provider extracts facial recognition parameters and searches social networking sites (e.g., FaceBook, MySpace, Linked-In), or a separate database containing facial recognition parameters for images on those sites, for similar-appearing faces. (The service may provide the user's sign-on credentials to the sites, allowing searching of information that is not otherwise publicly accessible.) Names and other information about similar-appearing persons located via the searching are returned to the user's cell phone—to help refresh the user's memory. Various UI procedures are contemplated. When data is returned from the remote service, the user may push button 16 b to scroll thru matches in order of closest-similarity—regardless of geography. Thumbnails of the matched individuals with associated name and other profile information can be displayed, or just full screen images of the person can be presented—with the name overlaid. When the familiar person is recognized, the user may press button 18 to load the full FaceBook/MySpace/Linked-In page for that person. Alternatively, instead of presenting images with names, just a textual list of name may be presented, e.g., all on a single screen—ordered by similarity of face-match; SMS text messaging can suffice for this last arrangement. Pushing button 16 d may scroll thru matches in order of closest-similarity, of people who list their residence as within a certain geographical proximity (e.g., same metropolitan area, same state, same campus, etc.) of the user's present location or the user's reference location (e.g., home). Pushing button 16 a may yield a similar display, but limited to persons who are “Friends” of the user within a social network (or who are Friends of Friends, or who are within another specified degree of separation of the user). A related arrangement is a law enforcement tool in which an officer captures an image of a person and submits same to a database containing facial portrait/eigenvalue information from government driver license records and/or other sources. Pushing button 16 b causes the screen to display a sequence of images/biographical dossiers about persons nationwide having the closest facial matches. Pushing button 16 d causes the screen to display a similar sequence, but limited to persons within the officer's state. Button 16 a yields such a sequence, but limited to persons within the metropolitan area in which the officer is working. Instead of three dimensions of information browsing (buttons 16 b, 16 d, 16 a, e.g., for similar-appearing images/similarly located images/similar metadata-tagged images), more or less dimensions can be employed. FIG. 25B shows browsing screens in just two dimensions. (Pressing the right button yields a first sequence 40 of information screens; pressing the left button yields a different sequence 42 of information screens.) Instead of two or more distinct buttons, a single UI control can be employed to navigate in the available dimensions of information. A joystick is one such device. Another is a roller wheel (or scroll wheel). Portable device 10 of FIG. 24 has a roller wheel 24 on its side, which can be rolled-up or rolled-down. It can also be pressed-in to make a selection (e.g., akin to buttons 16 c or 18 of the earlier-discussed controller). Similar controls are available on many mice. In most user interfaces, opposing buttons (e.g., left button 16 b, and right button 16 d) navigate the same dimension of information—just in opposite directions (e.g., forward/reverse). In the particular interface discussed above, it will be recognized that this is not the case (although in other implementations, it may be so). Pressing the right button 16 b, and then pressing the left button 16 d, does not return the system to its original state. Instead, pressing the right button gives, e.g., a first similar-appearing image, and pressing the left button gives the first similarly-located image. Sometimes it is desirable to navigate through the same sequence of screens, but in reverse of the order just-reviewed. Various interface controls can be employed to do this. One is a “Reverse” button. The device 10 in FIG. 24 includes a variety of buttons not-yet discussed (e.g., buttons 20 a-20 f, around the periphery of the controller 14). Any of these—if pressed—can serve to reverse the scrolling order. By pressing, e.g., button 20 a, the scrolling (presentation) direction associated with nearby button 16 b can be reversed. So if button 16 b normally presents items in order of increasing cost, activation of button 20 a can cause the function of button 16 b to switch, e.g., to presenting items in order of decreasing cost. If, in reviewing screens resulting from use of button 16 b, the user “overshoots” and wants to reverse direction, she can push button 20 a, and then push button 16 b again. The screen(s) earlier presented would then appear in reverse order—starting from the present screen. Or, operation of such a button (e.g., 20 a or 20 f) can cause the opposite button 16 d to scroll back thru the screens presented by activation of button 16 b, in reverse order. A textual or symbolic prompt can be overlaid on the display screen in all these embodiments—informing the user of the dimension of information that is being browsed, and the direction (e.g., browsing by cost: increasing). In still other arrangements, a single button can perform multiple functions. For example, pressing button 16 b can cause the system to start presenting a sequence of screens, e.g., showing pictures of houses for sale nearest the user's location—presenting each for 800 milliseconds (an interval set by preference data entered by the user). Pressing button 16 b a second time can cause the system to stop the sequence—displaying a static screen of a house for sale. Pressing button 16 b a third time can cause the system to present the sequence in reverse order, starting with the static screen and going backwards thru the screens earlier presented. Repeated operation of buttons 16 a, 16 b, etc., can operate likewise (but control different sequences of information, e.g., houses closest in price, and houses closest in features). In arrangements in which the presented information stems from a process applied to a base image (e.g., a picture snapped by a user), this base image may be presented throughout the display—e.g., as a thumbnail in a corner of the display. Or a button on the device (e.g., 26 a, or 20 b) can be operated to immediately summon the base image back to the display. Touch interfaces are gaining in popularity, such as in products available from Apple and Microsoft (detailed, e.g., in patent publications 20060026535, 20060026536, 20060250377, 20080211766, 20080158169, 20080158172, 20080001924, 20080204426, 20080174570, 20070236470 and 20060033701). Such technologies can be employed to enhance and extend the just-reviewed user interface concepts—allowing greater degrees of flexibility and control. Each button press noted above can have a counterpart gesture in the vocabulary of the touch screen system. For example, different touch-screen gestures can invoke display of the different types of image feeds just reviewed. A brushing gesture to the right, for example, may present a rightward-scrolling series of image frames 30 of imagery having similar visual content (with the initial speed of scrolling dependent on the speed of the user gesture, and with the scrolling speed decelerating—or not—over time). A brushing gesture to the left may present a similar leftward-scrolling display of imagery 32 having similar GPS information. A brushing gesture upward may present images an upward-scrolling display of imagery 34 similar in metadata. At any point the user can tap one of the displayed images to make it the base image, with the process repeating. Other gestures can invoke still other actions. One such action is displaying overhead imagery corresponding to the GPS location associated with a selected image. The imagery can be zoomed in/out with other gestures. The user can select for display photographic imagery, map data, data from different times of day or different dates/seasons, and/or various overlays (topographic, places of interest, and other data, as is known from Google Earth), etc. Icons or other graphics may be presented on the display depending on contents of particular imagery. One such arrangement is detailed in application Ser. No. 11/941,268. “Curbside” or “street-level” imagery—rather than overhead imagery—can be also displayed. It will be recognized that certain embodiments of the present technology include a shared general structure. An initial set of data (e.g., an image, or metadata such as descriptors or geocode information, or image metrics such as eigenvalues) is presented. From this, a second set of data (e.g., images, or image metrics, or metadata) are obtained. From that second set of data, a third set of data is compiled (e.g., images with similar image metrics or similar metadata, or image metrics, or metadata). Items from the third set of data can be used as a result of the process, or the process may continue, e.g., by using the third set of data in determining fourth data (e.g., a set of descriptive metadata can be compiled from the images of the third set). This can continue, e.g., determining a fifth set of data from the fourth (e.g., identifying a collection of images that have metadata terms from the fourth data set). A sixth set of data can be obtained from the fifth (e.g., identifying clusters of GPS data with which images in the fifth set are tagged), and so on. The sets of data can be images, or they can be other forms of data (e.g., image metrics, textual metadata, geolocation data, decoded OCR-, barcode-, watermark-data, etc). Any data can serve as the seed. The process can start with image data, or with other information, such as image metrics, textual metadata (aka semantic metadata), geolocation information (e.g., GPS coordinates), decoded OCR/barcode/watermark data, etc. From a first type of information (image metrics, semantic metadata, GPS info, decoded info), a first set of information-similar images can be obtained. From that first set, a second, different type of information (image metrics/semantic metadata/GPS/decoded info, etc.) can be gathered. From that second type of information, a second set of information-similar images can be obtained. From that second set, a third, different type of information (image metrics/semantic metadata/GPS/decoded info, etc.) can be gathered. From that third type of information, a third set of information-similar images can be obtained. Etc. Thus, while the illustrated embodiments generally start with an image, and then proceed by reference to its image metrics, and so on, entirely different combinations of acts are also possible. The seed can be the payload from a product barcode. This can generate a first collection of images depicting the same barcode. This can lead to a set of common metadata. That can lead to a second collection of images based on that metadata. Image metrics may be computed from this second collection, and the most prevalent metrics can be used to search and identify a third collection of images. The images thus identified can be presented to the user using the arrangements noted above. In some embodiments, the present technology may be regarded as employing an iterative, recursive process by which information about one set of images (a single image in many initial cases) is used to identify a second set of images, which may be used to identify a third set of images, etc. The function by which each set of images is related to the next relates to a particular class of image information, e.g., image metrics, semantic metadata, GPS, decoded info, etc. In other contexts, the relation between one set of images and the next is a function not just of one class of information, but two or more. For example, a seed user image may be examined for both image metrics and GPS data. From these two classes of information a collection of images can be determined—images that are similar in both some aspect of visual appearance and location. Other pairings, triplets, etc., of relationships can naturally be employed—in the determination of any of the successive sets of images. Further Discussion Some embodiments of the present technology analyze a consumer cell phone picture, and heuristically determine information about the picture's subject. For example, is it a person, place, or thing? From this high level determination, the system can better formulate what type of response might be sought by the consumer—making operation more intuitive. For example, if the subject of the photo is a person, the consumer might be interested in adding the depicted person as a FaceBook “friend.” Or sending a text message to that person. Or publishing an annotated version of the photo to a web page. Or simply learning who the person is. If the subject is a place (e.g., Times Square), the consumer might be interested in the local geography, maps, and nearby attractions. If the subject is a thing (e.g., the Liberty Bell or a bottle of beer), the consumer may be interested in information about the object (e.g., its history, others who use it), or in buying or selling the object, etc. Based on the image type, an illustrative system/service can identify one or more actions that it expects the consumer will find most appropriately responsive to the cell phone image. One or all of these can be undertaken, and cached on the consumer's cell phone for review. For example, scrolling a thumbwheel on the side of the cell phone may present a succession of different screens—each with different information responsive to the image subject. (Or a screen may be presented that queries the consumer as to which of a few possible actions is desired.) In use, the system can monitor which of the available actions is chosen by the consumer. The consumer's usage history can be employed to refine a Bayesian model of the consumer's interests and desires, so that future responses can be better customized to the user. These concepts will be clearer by example (aspects of which are depicted, e.g., in FIGS. 26 and 27). Processing a Set of Sample Images Assume a tourist snaps a photo of the Prometheus statue at Rockefeller Center in New York using a cell phone or other mobile device. Initially, it is just a bunch of pixels. What to do? Assume the image is geocoded with location information (e.g., latitude/longitude in XMP- or EXIF-metadata). From the image geocode data, a search of Flickr can be undertaken for a first set of images—taken from the same (or nearby) location. Perhaps there are 5 or 500 images in this first set. Metadata from this set of images is collected. The metadata can be of various types. One is words/phrases from a title given to an image. Another is information in metatags assigned to the image—usually by the photographer (e.g., naming the photo subject and certain attributes/keywords), but additionally by the capture device (e.g., identifying the camera model, the date/time of the photo, the location, etc). Another is words/phrases in a narrative description of the photo authored by the photographer. Some metadata terms may be repeated across in different images. Descriptors common to two or more images can be identified (clustered), and the most popular terms may be ranked. (Such as listing is shown at “A” in FIG. 26A. Here, and in other metadata listings, only partial results are given for expository convenience.) From the metadata, and from other analysis, it may be possible to determine which images in the first set are likely person-centric, which are place-centric, and which are thing-centric. Consider the metadata with which a set of 50 images may be tagged. Some of the terms relate to place. Some relate to persons depicted in the images. Some relate to things. Place-Centric Processing Terms that relate to place can be identified using various techniques. One is to use a database with geographical information to look-up location descriptors near a given geographical position. Yahoo's GeoPlanet service, for example, returns a hierarchy of descriptors such as “Rockefeller Center,” “10024” (a zip code), “Midtown Manhattan,” “New York,” “Manhattan,” “New York,” and “United States,” when queried with the latitude/longitude of the Rockefeller Center. The same service can return names of adjoining/sibling neighborhoods/features on request, e.g., “10017,” “10020,” “10036,” “Theater District,” “Carnegie Hall,” “Grand Central Station,” “Museum of American Folk Art,” etc., etc. Nearby street names can be harvested from a variety of mapping programs, given a set of latitude/longitude coordinates or other location info. A glossary of nearby place-descriptors can be compiled in such manner. The metadata harvested from the set of Flickr images can then be analyzed, by reference to the glossary, to identify the terms that relate to place (e.g., that match terms in the glossary). Consideration then turns to use of these place-related metadata in the reference set of images collected from Flickr. Some images may have no place-related metadata. These images are likely person-centric or thing-centric, rather than place-centric. Other images may have metadata that is exclusively place-related. These images are likely place-centric, rather than person-centric or thing-centric. In between are images that have both place-related metadata, and other metadata. Various rules can be devised and utilized to assign the relative relevance of the image to place. One rule looks at the number of metadata descriptors associated with an image, and determines the fraction that is found in the glossary of place-related terms. This is one metric. Another looks at where in the metadata the place-related descriptors appear. If they appear in an image title, they are likely more relevant than if they appear at the end of a long narrative description about the photograph. Placement of the placement-related metadata is another metric. Consideration can also be given to the particularity of the place-related descriptor. A descriptor “New York” or “USA” may be less indicative that an image is place-centric than a more particular descriptor, such as “Rockefeller Center” or “Grand Central Station.” This can yield a third metric. A related, fourth metric considers the frequency of occurrence (or improbability) of a term—either just within the collected metadata, or within a superset of that data. “RCA Building” is more relevant, from this standpoint, than “Rockefeller Center” because it is used much less frequently. These and other metrics can be combined to assign each image in the set with a place score indicating its potential place-centric-ness. The combination can be a straight sum of four factors, each ranging from 0 to 100. More likely, however, some metrics will be weighted more heavily. The following equation employing metrics M1, M2, M2 and M4 can be employed to yield a score S, with the factors A, B, C, D and exponents W, X, Y and Z determined experimentally, or by Bayesian techniques: S=(A*M1)W+(B*M2)X+(C*M3)Y+(D*M4)Z Person-Centric Processing A different analysis can be employed to estimate the person-centric-ness of each image in the set obtained from Flickr. As in the example just-given, a glossary of relevant terms can be compiled—this time terms associated with people. In contrast to the place name glossary, the person name glossary can be global—rather than associated with a particular locale. (However, different glossaries may be appropriate in different countries.) Such a glossary can be compiled from various sources, including telephone directories, lists of most popular names, and other reference works where names appear. The list may start, “Aaron, Abigail, Adam, Addison, Adrian, Aidan, Aiden, Alex, Alexa, Alexander, Alexandra, Alexis, Allison, Alyssa, Amelia, Andrea, Andrew, Angel, Angelina, Anna, Anthony, Antonio, Ariana, Arianna, Ashley, Aubrey, Audrey, Austin, Autumn, Ava, Avery . . . ” First names alone can be considered, or last names can be considered too. (Some names may be a place name or a person name. Searching for adjoining first/last names and/or adjoining place names can help distinguish ambiguous cases. E.g., Elizabeth Smith is a person; Elizabeth N.J. is a place.) Personal pronouns and the like can also be included in such a glossary (e.g., he, she, him, her, his, our, her, I, me, myself, we, they, them, mine, their). Nouns identifying people and personal relationships can also be included (e.g., uncle, sister, daughter, gramps, boss, student, employee, wedding, etc) Adjectives and adverbs that are usually applied to people may also be included in the person-term glossary (e.g., happy, boring, blonde, etc), as can the names of objects and attributes that are usually associated with people (e.g., t-shirt, backpack, sunglasses, tanned, etc.). Verbs associated with people can also be employed (e.g., surfing, drinking). In this last group, as in some others, there are some terms that could also apply to thing-centric images (rather than person-centric). The term “sunglasses” may appear in metadata for an image depicting sunglasses, alone; “happy” may appear in metadata for an image depicting a dog. There are also some cases where a person-term may also be a place-term (e.g., Boring, Oreg.). In more sophisticated embodiments, glossary terms can be associated with respective confidence metrics, by which any results based on such terms may be discounted or otherwise acknowledged to have different degrees of uncertainty.) As before, if an image is not associated with any person-related metadata, then the image can be adjudged likely not person-centric. Conversely, if all of the metadata is person-related, the image is likely person-centric. For other cases, metrics like those reviewed above can be assessed and combined to yield a score indicating the relative person-centric-ness of each image, e.g., based on the number, placement, particularity and/or frequency/improbability of the person-related metadata associated with the image. While analysis of metadata gives useful information about whether an image is person-centric, other techniques can also be employed—either alternatively, or in conjunction with metadata analysis. One technique is to analyze the image looking for continuous areas of skin-tone colors. Such features characterize many features of person-centric images, but are less frequently found in images of places and things. A related technique is facial recognition. This science has advanced to the point where even inexpensive point-and-shoot digital cameras can quickly and reliably identify faces within an image frame (e.g., to focus or expose the image based on such subjects). (Face finding technology is detailed, e.g., in U.S. Pat. Nos. 5,781,650, 5,835,616, 6,633,655, 6,597,801 and 6,430,306, and in Yang et al, Detecting Faces in Images: A Survey, IEEE Transactions on Pattern Analysis and Machine Intelligence, Vol. 24, No. 1, January 2002, pp. 34-58, and Zhao, et al, Face Recognition: A Literature Survey, ACM Computing Surveys, 2003, pp. 399-458. Additional papers about facial recognition technologies are noted in a bibliography at the end of this specification.) Facial recognition algorithms can be applied to the set of reference images obtained from Flickr, to identify those that have evident faces, and identify the portions of the images corresponding to the faces. Of course, many photos have faces depicted incidentally within the image frame. While all images having faces could be identified as person-centric, most embodiments employ further processing to provide a more refined assessment. One form of further processing is to determine the percentage area of the image frame occupied by the identified face(s). The higher the percentage, the higher the likelihood that the image is person-centric. This is another metric than can be used in determining an image's person-centric score. Another form of further processing is to look for the existence of (1) one or more faces in the image, together with (2) person-descriptors in the metadata associated with the image. In this case, the facial recognition data can be used as a “plus” factor to increase a person-centric score of an image based on metadata or other analysis. (The “plus” can take various forms. E.g., a score (in a 0-100 scale) can be increased by 10, or increased by 10%. Or increased by half the remaining distance to 100, etc.) Thus, for example, a photo tagged with “Elizabeth” metadata is more likely a person-centric photo if the facial recognition algorithm finds a face within the image than if no face is found. (Conversely, the absence of any face in an image can be used as a “plus” factor to increase the confidence that the image subject is of a different type, e.g., a place or a thing. Thus, an image tagged with Elizabeth as metadata, but lacking any face, increases the likelihood that the image relates to a place named Elizabeth, or a thing named Elizabeth—such as a pet.) Still more confidence in the determination can be assumed if the facial recognition algorithm identifies a face as a female, and the metadata includes a female name. Such an arrangement, of course, requires that the glossary—or other data structure—have data that associates genders with at least some names. (Still more sophisticated arrangements can be implemented. For example, the age of the depicted person(s) can be estimated using automated techniques (e.g., as detailed in U.S. Pat. No. 5,781,650). Names found in the image metadata can also be processed to estimate the age of the thus-named person(s). This can be done using public domain information about the statistical distribution of a name as a function of age (e.g., from published Social Security Administration data, and web sites that detail most popular names from birth records). Thus, names Mildred and Gertrude may be associated with an age distribution that peaks at age 80, whereas Madison and Alexis may be associated with an age distribution that peaks at age 8. Finding statistically-likely correspondence between metadata name and estimated person age can further increase the person-centric score for an image. Statistically unlikely correspondence can be used to decrease the person-centric score. (Estimated information about the age of a subject in the consumer's image can also be used to tailor the intuited response(s), as may information about the subject's gender.)) Just as detection of a face in an image can be used as a “plus” factor in a score based on metadata, the existence of person-centric metadata can be used as a “plus” factor to increase a person-centric score based on facial recognition data. Of course, if no face is found in an image, this information can be used to reduce a person-centric score for the image (perhaps down to zero). Thing-Centric Processing A thing-centered image is the third type of image that may be found in the set of images obtained from Flickr in the present example. There are various techniques by which a thing-centric score for an image can be determined. One technique relies on metadata analysis, using principles like those detailed above. A glossary of nouns can be compiled—either from the universe of Flickr metadata or some other corpus (e.g., WordNet), and ranked by frequency of occurrence. Nouns associated with place and persons can be removed from the glossary. The glossary can be used in the manners identified above to conduct analyses of the images' metadata, to yield a score for each. Another approach uses pattern matching to identify thing-centric images—matching each against a library of known thing-related images. Still another approach is based on earlier-determined scores for person-centric and place-centric. A thing-centric score may be assigned in inverse relationship to the other two scores (i.e., if an image scores low for being person-centric, and low for being place-centric, then it can be assigned a high score for being thing-centric). Such techniques may be combined, or used individually. In any event, a score is produced for each image—tending to indicate whether the image is more- or less-likely to be thing-centric. Further Processing of Sample Set of Images Data produced by the foregoing techniques can produce three scores for each image in the set, indicating rough confidence/probability/likelihood that the image is (1) person-centric, (2) place-centric, or (3) thing-centric. These scores needn't add to 100% (although they may). Sometimes an image may score high in two or more categories. In such case the image may be regarded as having multiple relevance, e.g., as both depicting a person and a thing. The set of images downloaded from Flickr may next be segregated into groups, e.g., A, B and C, depending on whether identified as primarily person-centric, place-centric, or thing-centric. However, since some images may have split probabilities (e.g., an image may have some indicia of being place-centric, and some indicia of being person-centric), identifying an image wholly by its high score ignores useful information. Preferable is to calculate a weighted score for the set of images—taking each image's respective scores in the three categories into account. A sample of images from Flickr—all taken near Rockefeller Center—may suggest that 60% are place-centric, 25% are person-centric, and 15% are thing-centric. This information gives useful insight into the tourist's cell phone image—even without regard to the contents of the image itself (except its geocoding). That is, chances are good that the image is place-centric, with less likelihood it is person-centric, and still less probability it is thing centric. (This ordering can be used to determine the order of subsequent steps in the process—allowing the system to more quickly gives responses that are most likely to be appropriate.) This type-assessment of the cell phone photo can be used—alone—to help determine an automated action provided to the tourist in response to the image. However, further processing can better assess the image's contents, and thereby allow a more particularly-tailored action to be intuited. Similarity Assessments and Metadata Weighting Within the set of co-located images collected from Flickr, images that are place-centric will tend to have a different appearance than images that are person-centric or thing-centric, yet tend to have some similarity within the place-centric group. Place-centric images may be characterized by straight lines (e.g., architectural edges). Or repetitive patterns (windows). Or large areas of uniform texture and similar color near the top of the image (sky). Images that are person-centric will also tend to have different appearances than the other two classes of image, yet have common attributes within the person-centric class. For example, person-centric images will usually have faces—generally characterized by two eyes and a nose, areas of flesh tones, etc. Although thing-centric images are perhaps the most diverse, images from any given geography may tend to have unifying attributes or features. Photos geocoded at a horse track will depict horses with some frequency; photos geocoded from Independence National Historical Park in Philadelphia will tend to depict the Liberty Bell regularly, etc. By determining whether the cell phone image is more similar to place-centric, or person-centric, or thing-centric images in the set of Flickr images, more confidence in the subject of the cell phone image can be achieved (and a more accurate response can be intuited and provided to the consumer). A fixed set of image assessment criteria can be applied to distinguish images in the three categories. However, the detailed embodiment determines such criteria adaptively. In particular, this embodiment examines the set of images and determines which image features/characteristics/metrics most reliably (1) group like-categorized images together (similarity); and (2) distinguish differently-categorized images from each other (difference). Among the attributes that may be measured and checked for similarity/difference behavior within the set of images are dominant color; color diversity; color histogram; dominant texture; texture diversity; texture histogram; edginess; wavelet-domain transform coefficient histograms, and dominant wavelet coefficients; frequency domain transfer coefficient histograms and dominant frequency coefficients (which may be calculated in different color channels); eigenvalues; geometric class probabilities; symmetry; percentage of image area identified as facial; image autocorrelation; low-dimensional “gists” of image; etc. (Combinations of such metrics may be more reliable than the characteristics individually.) One way to determine which metrics are most salient for these purposes is to compute a variety of different image metrics for the reference images. If the results within a category of images for a particular metric are clustered (e.g., if, for place-centric images, the color histogram results are clustered around particular output values), and if images in other categories have few or no output values near that clustered result, then that metric would appear well suited for use as an image assessment criteria. (Clustering is commonly performed using an implementation of a k-means algorithm.) In the set of images from Rockefeller Center, the system may determine that an edginess score of >40 is reliably associated with images that score high as place-centric; a facial area score of >15% is reliably associated with images that score high as person-centric; and a color histogram that has a local peak in the gold tones—together with a frequency content for yellow that peaks at lower image frequencies, is somewhat associated with images that score high as thing-centric. The analysis techniques found most useful in grouping/distinguishing the different categories of images can then be applied to the user's cell phone image. The results can then be analyzed for proximity—in a distance measure sense (e.g., multi-dimensional space)—with the characterizing features associated with different categories of images. (This is the first time that the cell phone image has been processed in this particular embodiment.) Using such techniques, the cell phone image may score a 60 for thing-centric, a 15 for place-centric, and a 0 for person-centric (on scale of 0-100). This is a second, better set of scores that can be used to classify the cell phone image (the first being the statistical distribution of co-located photos found in Flickr). The similarity of the user's cell phone image may next be compared with individual images in the reference set. Similarity metrics identified earlier can be used, or different measures can be applied. The time or processing devoted to this task can be apportioned across the three different image categories based on the just-determined scores. E.g., the process may spend no time judging similarity with reference images classed as 100% person-centric, but instead concentrate on judging similarity with reference images classed as thing- or place-centric (with four times as much effort being applied to the former than the latter). A similarly score is generated for most of the images in the reference set (excluding those that are assessed as 100% person-centric). Consideration then returns to metadata. Metadata from the reference images is again assembled—this time weighted in accordance with each image's respective similarity to the cell phone image. (The weighting can be linear or exponential.) Since metadata from similar images is weighted more than metadata from dissimilar images, the resulting set of metadata is tailored to more likely correspond to the cell phone image. From the resulting set, the top N (e.g., 3) metadata descriptors may be used. Or descriptors that—on a weighted basis—comprise an aggregate M % of the metadata set. In the example given, the thus-identified metadata may comprise “Rockefeller Center,” “Prometheus,” and “Skating rink,” with respective scores of 19, 12 and 5 (see “B” in FIG. 26B). With this weighted set of metadata, the system can begin determining what responses may be most appropriate for the consumer. In the exemplary embodiment, however, the system continues by further refining its assessment of the cell phone image. (The system may begin determining appropriate responses while also undertaking the further processing.) Processing a Second Set of Reference Images At this point the system is better informed about the cell phone image. Not only is its location known; so is its likely type (thing-centric) and some of its most-probably-relevant metadata. This metadata can be used in obtaining a second set of reference images from Flickr. In the illustrative embodiment, Flickr is queried for images having the identified metadata. The query can be geographically limited to the cell phone's geolocation, or a broader (or unlimited) geography may be searched. (Or the query may run twice, so that half of the images are co-located with the cell phone image, and the others are remote, etc.) The search may first look for images that are tagged with all of the identified metadata. In this case, 60 images are found. If more images are desired, Flickr may be searched for the metadata terms in different pairings, or individually. (In these latter cases, the distribution of selected images may be chosen so that the metadata occurrence in the results corresponds to the respective scores of the different metadata terms, i.e., 19/12/5.) Metadata from this second set of images can be harvested, clustered, and may be ranked (“C” in FIG. 26B). (Noise words (“and, of, or,” etc.) can be eliminated. Words descriptive only of the camera or the type of photography may also be disregarded (e.g., “Nikon,” “D80,” “HDR,” “black and white,” etc.). Month names may also be removed.) The analysis performed earlier—by which each image in the first set of images was classified as person-centric, place-centric or thing-centric—can be repeated on images in the second set of images. Appropriate image metrics for determining similarity/difference within and between classes of this second image set can be identified (or the earlier measures can be employed). These measures are then applied, as before, to generate refined scores for the user's cell phone image, as being person-centric, place-centric, and thing-centric. By reference to the images of the second set, the cell phone image may score a 65 for thing-centric, 12 for place-centric, and 0 for person-centric. (These scores may be combined with the earlier-determined scores, e.g., by averaging, if desired.) As before, similarity between the user's cell phone image and each image in the second set can be determined. Metadata from each image can then be weighted in accordance with the corresponding similarity measure. The results can then be combined to yield a set of metadata weighted in accordance image similarity. Some of the metadata—often including some highly ranked terms—will be of relatively low value in determining image-appropriate responses for presentation to the consumer. “New York,” “Manhattan,” are a few examples. Generally more useful will be metadata descriptors that are relatively unusual. A measure of “unusualness” can be computed by determining the frequency of different metadata terms within a relevant corpus, such as Flickr image tags (globally, or within a geolocated region), or image tags by photographers from whom the respective images were submitted, or words in an encyclopedia, or in Google's index of the web, etc. The terms in the weighted metadata list can be further weighted in accordance with their unusualness (i.e., a second weighting). The result of such successive processing may yield the list of metadata shown at “D” in FIG. 26B (each shown with its respective score). This information (optionally in conjunction with a tag indicating the person/place/thing determination) allows responses to the consumer to be well-correlated with the cell phone photo. It will be recognized that this set of inferred metadata for the user's cell phone photo was compiled entirely by automated processing of other images, obtained from public sources such as Flickr, in conjunction with other public resources (e.g., listings of names, places). The inferred metadata can naturally be associated with the user's image. More importantly for the present application, however, it can help a service provider decide how best to respond to submission of the user's image. Determining Appropriate Responses for Consumer Referring to FIG. 30, the system just-described can be viewed as one particular application of an “image juicer” that receives image data from a user, and applies different forms of processing so as to gather, compute, and/or infer information that can be associated with the image. As the information is discerned, it can be forwarded by a router to different service providers. These providers may be arranged to handle different types of information (e.g., semantic descriptors, image texture data, etc) or to different classes of images (e.g., photo of friend, photo of a can of soda, etc). Outputs from these service providers are sent to one or more devices (e.g., the user's cell phone) for presentation or later reference. The present discussion now considers how these service providers decide what responses may be appropriate for a given set of input information. One approach is to establish a taxonomy of image subjects and corresponding responses. A tree structure can be used, with an image first being classed into one of a few high level groupings (e.g., person/place/thing), and then each group being divided into further subgroups. In use, an image is assessed through different branches of the tree until the limits of available information allow no further progress to be made. Actions associated with the terminal leaf or node of the tree are then taken. Part of a simple tree structure is shown in FIG. 31. (Each node spawns three branches, but this is for illustration only; more or less branches can of course be used.) If the subject of the image is inferred to be an item of food (e.g., if the image is associated with food-related metadata), three different screens of information can be cached on the user's phone. One starts an online purchase of the depicted item at an online vendor. (The choice of vendor, and payment/shipping details, are obtained from user profile data.) The second screen shows nutritional information about the product. The third presents a map of the local area—identifying stores that sell the depicted product. The user switches among these responses using a roller wheel 24 on the side of the phone (FIG. 24). If the subject is inferred to be a photo of a family member or friend, one screen presented to the user gives the option of posting a copy of the photo to the user's FaceBook page, annotated with the person(s)'s likely name(s). (Determining the names of persons depicted in a photo can be done by submitting the photo to the user's account at Picasa. Picasa performs facial recognition operations on submitted user images, and correlates facial eigenvectors with individual names provided by the user, thereby compiling a user-specific database of facial recognition information for friends and others depicted in the user's prior images.) Another screen starts a text message to the individual, with the addressing information having been obtained from the user's address book, indexed by the Picasa-determined identity. The user can pursue any or all of the presented options by switching between the associated screens. If the subject appears to be a stranger (e.g., not recognized by Picasa), the system will have earlier undertaken an attempted recognition of the person using publicly available facial recognition information. (Such information can be extracted from photos of known persons. VideoSurf is one vendor with a database of facial recognition features for actors and other persons.) The screen(s) presented to the user can show reference photos of the persons matched (together with a “match” score), as well as dossiers of associated information compiled from the web and other databases. A further screen gives the user the option of sending a “Friend” invite to the recognized person on MySpace, or another social networking site where the recognized person is found to have a presence. A still further screen details the degree of separation between the user and the recognized person. (E.g., my brother David has a classmate Steve, who has a friend Matt, who has a friend Tom, who is the son of the depicted person.) Such relationships can be determined from association information published on social networking sites. Of course, the responsive options contemplated for the different sub-groups of image subjects may meet most user desires, but some users will want something different. Thus, at least one alternative response to each image will typically be open-ended—allowing the user to navigate to different information, or specify a desired response—making use of whatever image/metadata processed information is available. One such open-ended approach is to submit the twice-weighted metadata noted above (e.g., “D” in FIG. 26B) to a general purpose search engine. Google, per se, is not necessarily best for this function, because current Google searches require that all search terms be found in the results. Better is a search engine that does fuzzy searching, and is responsive to differently-weighted keywords—not all of which need be found. The results can indicate different seeming relevance, depending on which keywords are found, where they are found, etc. (A result including “Prometheus” but lacking “RCA Building” would be ranked more relevant than a result including the latter but lacking the former.) The results from such a search can be clustered by other concepts. For example, some of the results may be clustered because they share the theme “art deco.” Others may be clustered because they deal with corporate history of RCA and GE. Others may be clustered because they concern the works of the architect Raymond Hood. Others may be clustered as relating to 20th century American sculpture, or Paul Manship. Other concepts found to produce distinct clusters may include John Rockefeller, The Mitsubishi Group, Colombia University, Radio City Music Hall, The Rainbow Room Restaurant, etc. Information from these clusters can be presented to the user on successive UI screens, e.g., after the screens on which prescribed information/actions are presented. The order of these screens can be determined by the sizes of the information clusters, or the keyword-determined relevance. Still a further response is to present to the user a Google search screen—pre-populated with the twice-weighted metadata as search terms. The user can then delete terms that aren't relevant to his/her interest, and add other terms, so as to quickly execute a web search leading to the information or action desired by the user. In some embodiments, the system response may depend on people with whom the user has a “friend” relationship in a social network, or some other indicia of trust. For example, if little is known about user Ted, but there is a rich set of information available about Ted's friend Alice, that rich set of information may be employed in determining how to respond to Ted, in connection with a given content stimulus. Similarly, if user Ted is a friend of user Alice, and Bob is a friend of Alice, then information relating to Bob may be used in determining an appropriate response to Ted. The same principles can be employed even if Ted and Alice are strangers, provided there is another basis for implicit trust. While basic profile similarity is one possible basis, a better one is the sharing an unusual attribute (or, better, several). Thus, for example, if both Ted and Alice share the traits of being fervent supporters of Dennis Kucinich for president, and being devotees of pickled squid, then information relating to one might be used in determining an appropriate response to present to the other. The arrangements just-described provides powerful new functionality. However, the “intuiting” of the responses likely desired by the user rely largely on the system designers. They consider the different types of images that may be encountered, and dictate responses (or selections of responses) that they believe will best satisfy the users' likely desires. In this respect the above-described arrangements are akin to early indexes of the web—such as Yahoo! Teams of humans generated taxonomies of information for which people might search, and then manually located web resources that could satisfy the different search requests. Eventually the web overwhelmed such manual efforts at organization. Google's founders were among those that recognized that an untapped wealth of information about the web could be obtained from examining links between the pages, and actions of users in navigating these links. Understanding of the system thus came from data within the system, rather than from an external perspective. In like fashion, manually crafted trees of image classifications/responses will probably someday be seen as an early stage in the development of image-responsive technologies. Eventually such approaches will be eclipsed by arrangements that rely on machine understanding derived from the system itself, and its use. One such technique simply examines which responsive screen(s) are selected by users in particular contexts. As such usage patterns become evident, the most popular responses can be moved earlier in the sequence of screens presented to the user. Likewise, if patterns become evident in use of the open-ended search query option, such action can become a standard response, and moved higher in the presentation queue. The usage patterns can be tailored in various dimensions of context. Males between 40 and 60 years of age, in New York, may demonstrate interest in different responses following capture of a snapshot of a statue by a 20th century sculptor, than females between 13 and 16 years of age in Beijing. Most persons snapping a photo of a food processor in the weeks before Christmas may be interested in finding the cheapest online vendor of the product; most persons snapping a photo of the same object the week following Christmas may be interested in listing the item for sale on E-Bay. Etc. Desirably, usage patterns are tracked with as many demographic and other descriptors as possible, so as to be most-predictive of user behavior. More sophisticated techniques can also be applied, drawing from the rich sources of expressly- and inferentially-linked data sources now available. These include not only the web and personal profile information, but all manner of other digital data we touch and in which we leave traces, e.g., cell phone billing statements, credit card statements, shopping data from Amazon, EBay, Google search history, browsing history, cached web pages, cookies, email archives, travel reservations on Expedia and Orbitz, music collections on iTunes, cable television subscriptions, Netflix movie choices, GPS tracking information, social network data and activities, activities and postings on photo sites such as Flickr and Picasa, and video sites such as YouTube; the times of day memorialized in these records, etc. (our “digital life log”). Moreover, this information is potentially available not just for the user, but also for the user's friends/family, for others having demographic similarities with the user, and ultimately everyone else (with appropriate anonymization and/or privacy safeguards). The network of interrelationships between these data sources is smaller than the network of web links analyzed by Google, but is perhaps richer in the diversity and types of links. From it can be mined a wealth of inferences and insights, which can help inform what a particular user is likely to want done with a particular snapped image. Artificial intelligence techniques can be applied to the data-mining task. One class of such techniques is natural language processing (NLP), a science that has made significant advancements recently. One example is the Semantic Map compiled by Cognition Technologies, Inc., a database that can be used to analyze words in context, in order to discern their meaning. This functionality can be used, e.g., to resolve homonym ambiguity in analysis of image metadata (e.g., does “bow” refer to a part of a ship, a ribbon adornment, a performer's thank-you, or a complement to an arrow? Proximity to terms such as “Carnival cruise,” “satin,” “Carnegie Hall” or “hunting” can provide the likely answer). U.S. Pat. No. 5,794,050 details the underlying technologies. The understanding of meaning gained through NLP techniques can also be used to augment image metadata with other relevant descriptors—which can be used as additional metadata in the embodiments detailed herein. For example, a close-up image tagged with the descriptor “hibiscus stamens” can—through NLP techniques—be further tagged with the term “flower.” (As of this writing, Flickr has 338 images tagged with “hibiscus” and “stamen,” but omitting “flower.”) U.S. Pat. No. 7,383,169 details how dictionaries and other large works of language can be processed by NLP techniques to compile lexical knowledge bases that serve as formidable sources of such “common sense” information about the world. This common sense knowledge can be applied in the metadata processing detailed herein. (Wikipedia is another reference source that can serve as the basis for such a knowledge base. Our digital life log is yet another—one that yields insights unique to us as individuals.) When applied to our digital life log, NLP techniques can reach nuanced understandings about our historical interests and actions—information that can be used to model (predict) our present interests and forthcoming actions. This understanding can be used to dynamically decide what information should be presented, or what action should be undertaken, responsive to a particular user capturing a particular image (or to other stimulus). Truly intuitive computing will then have arrived. Other Comments While the image/metadata processing detailed above takes many words to describe, it need not take much time to perform. Indeed, much of the processing of reference data, compilation of glossaries, etc., can be done off-line—before any input image is presented to the system. Flickr, Yahoo! or other service providers, can periodically compile and pre-process reference sets of data for various locales, to be quickly available when needed to respond to an image query. In some embodiments, other processing activities will be started in parallel with those detailed. For example, if initial processing of the first set of reference images suggests that the snapped image is place-centric, the system can request likely-useful information from other resources before processing of the user image is finished. To illustrate, the system may immediately request a street map of the nearby area, together with a satellite view, a street view, a mass transit map, etc Likewise, a page of information about nearby restaurants can be compiled, together with another page detailing nearby movies and show-times, and a further page with a local weather forecast. These can all be sent to the user's phone and cached for later display (e.g., by scrolling a thumb wheel on the side of the phone). These actions can likewise be undertaken before any image processing occurs—simply based on the geocode data accompanying the cell phone image. While geocoding data accompanying the cell phone image was used in the arrangement particularly described, this is not necessary. Other embodiments can select sets of reference images based on other criteria, such as image similarity. (This may be determined by various metrics, as indicated above. Known image classification techniques can also be used to determine one of several classes of images into which the input image falls, so that similarly-classed images can then be retrieved.) Another criteria is the IP address from which the input image is uploaded. Other images uploaded from the same—or geographically-proximate—IP addresses, can be sampled to form the reference sets. Even in the absence of geocode data for the input image, the reference sets of imagery may nonetheless be compiled based on location. Location information for the input image can be inferred from various indirect techniques. The wireless service provider thru which the cell phone image is relayed may identify the particular cell tower from which the tourist's transmission was received. (If the transmission originated through another wireless link, such as WiFi, its location may also be known.) The tourist may have used his credit card an hour earlier at a Manhattan hotel, allowing the system (with appropriate privacy safeguards) to infer that the picture was taken somewhere near Manhattan. Sometimes features depicted in the image are so iconic that a quick search for similar images in Flickr can locate the user (e.g., as being at the Eiffel Tower, or at the Statue of Liberty). GeoPlanet was cited as one source of geographic information. However, a number of other geoinformation databases can alternatively be used. GeoNames-dot-org is one. (It will be recognized that the “-dot-” convention, and omission of the usual http preamble, is used to prevent the reproduction of this text by the Patent Office from being indicated as a live hyperlink). In addition to providing place names for a given latitude/longitude (at levels of neighborhood, city, state, country), and providing parent, child, and sibling information for geographic divisions, its free data (available as a web service) also provides functions such as finding the nearest intersection, finding the nearest post office, finding the surface elevation, etc. It will be recognized that archives of aerial imagery are growing exponentially. Part of such imagery is from a straight-down perspective, but off-axis the imagery increasingly becomes oblique. From two or more different oblique views of a location, a 3D model can be created. As the resolution of such imagery increases, sufficiently rich sets of data are available that—for some locations—a view of a scene as if taken from ground level may be synthesized. Such views can be matched with street level photos, and metadata from one can augment metadata for the other. As shown in FIG. 27, the embodiment particularly described above made use of various resources, including Flickr, a database of person names, a word frequency database, etc. These are just a few of the many different information sources that might be employed in such arrangements. Other social networking sites, shopping sites (e.g., Amazon, EBay), weather and traffic sites, online thesauruses, caches of recently-visited web pages, browsing history, cookie collections, Google, other digital repositories (as detailed herein), etc., can all provide a wealth of additional information that can be applied to the intended tasks. Some of this data reveals information about the user's interests, habits and preferences—data that can be used to better infer the contents of the snapped picture, and to better tailor the intuited response(s). Likewise, while FIG. 27 shows a few lines interconnecting the different items, these are illustrative only. Different interconnections can naturally be employed. The arrangements detailed in this specification are a particular few out of myriad that may be employed. Most embodiments will be different than the ones detailed. Some actions will be omitted, some will performed in different orders, some will be performed in parallel rather than serially (and vice versa), some additional actions may be included, etc. One additional action is to refine the just-detailed process by receiving user-related input, e.g., after the processing of the first set of Flickr images. For example, the system identified “Rockefeller Center,” “Prometheus,” and “Skating rink” as relevant metadata to the user-snapped image. The system may query the user as to which of these terms is most relevant (or least relevant) to his/her particular interest. The further processing (e.g., further search, etc.) can be focused accordingly. Within an image presented on a touch screen, the user may touch a region to indicate an object of particular relevance within the image frame. Image analysis and subsequent acts can then focus on the identified object. Some of the database searches can be iterative/recursive. For example, results from one database search can be combined with the original search inputs and used as inputs for a further search. It will be recognized that much of the foregoing processing is fuzzy. Many of the data is in terms of metrics that have no absolute meaning, but are relevant only to the extent different from other metrics. Many such different probabilistic factors can be assessed and then combined—a statistical stew. Artisans will recognize that the particular implementation suitable for a given situation may be largely arbitrary. However, thru experience and Bayesian techniques, more informed manners of weighting and using the different factors can be identified and eventually used. If the Flickr archive is large enough, the first set of images in the arrangement detailed above may be selectively chosen to more likely be similar to the subject image. For example, Flickr can be searched for images taken at about the same time of day. Lighting conditions will be roughly similar, e.g., so that matching a night scene to a daylight scene is avoided, and shadow/shading conditions might be similar. Likewise, Flickr can be searched for images taken in the same season/month. Issues such as seasonal disappearance of the ice skating rink at Rockefeller Center, and snow on a winter landscape, can thus be mitigated. Similarly, if the camera/phone is equipped with technology permitting its bearing (and/or azimuth/elevation) to be determined, then Flickr can be searched for shots with this degree of similarity too. Moreover, the sets of reference images collected from Flickr desirably comprise images from many different sources (photographers)—so they don't tend towards use of the same metadata descriptors. Images collected from Flickr may be screened for adequate metadata. For example, images with no metadata (except, perhaps, an arbitrary image number) may be removed from the reference set(s) Likewise, images with less than 2 (or 20) metadata terms, or without a narrative description, may be disregarded. Flickr is often mentioned in this specification, but other collections of content can of course be used. Images in Flickr commonly have specified license rights for each image. These include “all rights reserved,” as well as a variety of Creative Commons licenses, through which the public can make use of the imagery on different terms. Systems detailed herein can limit their searches through Flickr for imagery meeting specified license criteria (e.g., disregard images marked “all rights reserved”). Other image collections are in some respect preferable. For example, the database at images.google-dot-com seems better at ranking images based on metadata-relevance than Flickr. Flickr and Google maintain image archives that are publicly accessible. Many other image archives are private. The present technology finds application with both—including some hybrid contexts in which both public and proprietary image collections are used (e.g., Flickr is used to find an image based on a user image, and the Flickr image is submitted to a private database to find a match and determine a corresponding response for the user). Similarly, while reference was made to services such as Flickr for providing data (e.g., images and metadata), other sources can of course be used. One alternative source is an ad hoc peer-to-peer (P2P) network. In such a P2P arrangement, there may optionally be a central index, with which peers can communicate in searching for desired content, and detailing the content they have available for sharing. The index may include metadata and metrics for images, together with pointers to the nodes at which the images themselves are stored. The peers may include cameras, PDAs, and other portable devices, from which image information may be available nearly instantly after it has been captured. In the course of the methods detailed herein, certain relationships are discovered between imagery (e.g., similar geolocation; similar image metrics; similar metadata, etc). These data are generally reciprocal, so if the system discovers—during processing of Image A, that its color histogram is similar to that of Image B, then this information can be stored for later use. If a later process involves Image B, the earlier-stored information can be consulted to discover that Image A has a similar histogram—without analyzing Image B. Such relationships are akin to virtual links between the images. For such relationship information to maintain its utility over time, it is desirable that the images be identified in a persistent manner. If a relationship is discovered while Image A is on a user's PDA, and Image B is on a desktop somewhere, a means should be provided to identify Image A even after it has been transferred to the user's MySpace account, and to track Image B after it has been archived to an anonymous computer in a cloud network. Images can be assigned Digital Object Identifiers (DOI) for this purpose. The International DOI Foundation has implemented the CNRI Handle System so that such resources can be resolved to their current location through the web site at doi-dot-org. If several different repositories are being searched for imagery or other information, it is often desirable to adapt the query to the particular databases being used. For example, different facial recognition databases may use different facial recognition parameters. To search across multiple databases, technologies such as detailed in patent applications 20040243567 and 20060020630 can be employed to ensure that each database is probed with an appropriately-tailored query. Frequent reference has been made to images, but in many cases other information may be used in lieu of image information itself. In different applications image identifiers, characterizing eigenvalues, associated metadata, decoded barcode or watermark data, etc., may be used instead of imagery, per se (e.g., as a data proxy). While the example just-given spoke of geocoding by latitude/longitude data, in other arrangements the cell phone/camera may provide location data in one or more other reference systems, such as Yahoo's GeoPlanet ID—the Where on Earth ID (WOEID).) Location metadata can be used for identifying other resources in addition to similarly-located imagery. Web pages, for example, can have geographical associations (e.g., a blog may concern the author's neighborhood; a restaurant's web page is associated with a particular physical address). The web service GeoURL-dot-org is a location-to-URL reverse directory that can be used to identify web sites associated with particular geographies. GeoURL supports a variety of location tags, including their own ICMB meta tags, as well as Geo Tags. Other systems that support geotagging include RDF, Geo microformat, and the GPSLongitude/GPSLatitude tags commonly used in XMP- and EXIF-camera metainformation. Flickr uses a syntax established by Geobloggers, e.g. geotagged geo:lat=57.64911 geo:lon=10.40744 In processing metadata, it is sometimes helpful to clean-up the data prior to analysis, as referenced above. The metadata may also be examined for dominant language, and if not English (or other particular language of the implementation), the metadata and the associated image may be removed from consideration. While the just-detailed embodiment sought to identify the image subject as being one of a person/place/thing so that a correspondingly-different action can be taken, analysis/identification of the image within other classes can naturally be employed. A few examples of the countless other class/type groupings include animal/vegetable/mineral; golf/tennis/football/baseball; male/female; wedding-ring-detected/wedding-ring-not-detected; urban/rural; rainy/clear; day/night; child/adult; summer/autumn/winter/spring; car/truck; consumer product/non-consumer product; can/box/bag; natural/man-made; suitable for all ages/parental advisory for children 13 and below/parental advisory for children 17 and below/adult only; etc. Sometimes different analysis engines may be applied to the user's image data. These engines can operate sequentially, or in parallel. For example, FIG. 28A shows an arrangement in which—if an image is identified as person-centric—it is next referred to two other engines. One identifies the person as family, friend or stranger. The other identifies the person as child or adult. The latter two engines work in parallel, after the first has completed its work. Sometimes engines can be employed without any certainty that they are applicable. For example, FIG. 28B shows engines performing family/friend/stranger and child/adult analyses—at the same time the person/place/thing engine is undertaking its analysis. If the latter engine determines the image is likely a place or thing, the results of the first two engines will likely not be used. (Some existing online services can be used for certain types of image discrimination/identification. For example, when an image of an aircraft is uploaded to one online site, it returns an identification of the plane by make and model. The arrangements detailed herein can refer imagery that appears to be of aircraft to such a site, and use the returned identification information. Or all input imagery can be referred to such a site; most of the returned results will be ambiguous and will not be used.) FIG. 29 shows that different analysis engines may provide their outputs to different response engines. Often the different analysis engines and response engines may be operated by different service providers. The outputs from these response engines can then be consolidated/coordinated for presentation to the consumer. (This consolidation may be performed by the user's cell phone—assembling inputs from different data sources.) One example of the technology detailed herein is a homebuilder who takes a cell phone image of a drill that needs a spare part. The image is analyzed, the drill is identified by the system as a Black and Decker DR250B, and the user is provided various info/action options. These include reviewing photos of drills with similar appearance, reviewing photos of drills with similar descriptors/features, reviewing the user's manual for the drill, seeing a parts list for the drill, buying the drill new from Amazon or used from EBay, listing the builder's drill on EBay, buying parts for the drill, etc. The builder chooses the “buying parts” option and proceeds to order the necessary part. (FIG. 21.) Another example is a person shopping for a home. She snaps a photo of the house. The system refers the image both to a private database of MLS information, and a public database such as Google. The system responds with a variety of options, including reviewing photos of the nearest houses offered for sale; reviewing photos of houses listed for sale that are closest in value to the pictured home, and within the same zip-code; reviewing photos of houses listed for sale that are most similar in features to the pictured home, and within the same zip-code; neighborhood and school information, etc. (FIG. 23.) In another example, a first user snaps an image of Paul Simon at a concert. The system automatically posts the image to the user's Flickr account—together with metadata inferred by the procedures detailed above. (The name of the artist may have been found in a search of Google for the user's geolocation; e.g., a Ticketmaster web page revealed that Paul Simon was playing that venue that night.) The first user's picture, a moment later, is encountered by a system processing a second concert-goer's photo of the same event, from a different vantage. The second user is shown the first user's photo as one of the system's responses to the second photo. The system may also alert the first user that another picture of the same event—from a different viewpoint—is available for review on his cell phone, if he'll press a certain button twice. In many such arrangements, it will be recognized that “the content is the network.” Associated with each photo, or each subject depicted in a photo (or any other item of digital content or information expressed therein), is a set of data and attributes that serve as implicit- or express-links to actions and other content. The user can navigate from one to the next—navigating between nodes on a network. Television shows are rated by the number of viewers, and academic papers are judged by the number of later citations. Abstracted to a higher level, it will be recognized that such “audience measurement” for physical- or virtual-content is the census of links that associate it with other physical- or virtual-content. While Google is limited to analysis and exploitation of links between digital content, the technology detailed herein allows the analysis and exploitation of links between physical content as well (and between physical and electronic content). Known cell phone cameras and other imaging devices typically have a single “shutter” button. However, the device may be provided with different actuator buttons—each invoking a different operation with the captured image information. By this arrangement, the user can indicate—at the outset—the type of action intended (e.g., identify faces in image per Picasa or VideoSurf information, and post to my FaceBook page; or try and identify the depicted person, and send a “friend request” to that person's MySpace account). Rather than multiple actuator buttons, the function of a sole actuator button might be controlled in accordance with other UI controls on the device. For example, repeated pressing of a Function Select button can cause different intended operations to be displayed on the screen of the UI. When the user then presses the shutter button, the selected operation is invoked. One common response (which may need no confirmation) is to post the image on Flickr or social network site(s). Metadata inferred by the processes detailed herein can be saved in conjunction with the imagery (qualified, perhaps, as to its confidence). In the past, the “click” of a mouse served to trigger a user-desired action. That action identified an X-Y-location coordinate on a virtual landscape (e.g., a desktop screen) that indicated the user's express intention. Going forward, this role will increasingly be served by the “snap” of a shutter—capturing a real landscape from which a user's intention will be inferred. Business rules can dictate a response appropriate to a given situation. These rules and responses may be determined by reference to data collected by web indexers, such as Google, etc., using intelligent routing. Crowdsourcing is not suitable for real-time implementations. However, inputs that stymie the system and fail to yield a corresponding action (or yield actions from which user selects none) can be referred offline for crowdsource analysis—so that next time it's presented, it can be handled better. Image-based navigation systems present a different topology than is familiar from web page-based navigation system. FIG. 17A shows that web pages on the internet relate in a point-to-point fashion. For example, web page 1 may link to web pages 2 and 3. Web page 3 may link to page 2. Web page 2 may link to page 4. Etc. FIG. 17B shows the contrasting network associated with image-based navigation. The individual images are linked a central node (e.g., a router), which then links to further nodes (e.g., response engines) in accordance with the image information. The “router” here does not simply route an input packet to a destination determined by address information conveyed with the packet—as in the familiar case with internet traffic routers. Rather, the router takes image information and decides what to do with it, e.g., to which responsive system should the image information be referred. Routers can be stand-alone nodes on a network, or they can be integrated with other devices. (Or their functionality can be distributed between such locations.) A wearable computer may have a router portion (e.g., a set of software instructions)—which takes image information from the computer, and decides how it should be handled. (For example, if it recognizes the image information as being an image of a business card, it may OCR name, phone number, and other data, and enter it into a contacts database.) The particular response for different types of input image information can be determined by a registry database, e.g., of the sort maintained by a computer's operating system. Likewise, while response engines can be stand-alone nodes on a network, they can also be integrated with other devices (or their functions distributed). A wearable computer may have one or several different response engines that take action on information provided by the router portion. FIG. 32 shows an arrangement employing several computers (A-E), some of which may be wearable computers (e.g., cell phones). The computers include the usual complement of processor, memory, storage, input/output, etc. The storage or memory can contain content, such as images, audio and video. The computers can also include one or more routers and/or response engines. Standalone routers and response engines may also be coupled to the network The computers are networked, shown schematically by link 50. This connection can be by any known networking arrangement, including the internet and/or wireless links (WiFi, WiMax, Bluetooth, etc), Software in at least certain of the computers includes a peer-to-peer (P2P) client, which makes that computer's resources available to other computers on the network, and reciprocally enables that computer to employ resources of the other computers. Though the P2P client, computer A may obtain image, video and audio content from computer B. Sharing parameters on computer B can be set to determine which content is shared, and with whom. Data on computer B may specify, for example, that some content is to be kept private; some may be shared with known parties (e.g., a tier of social network “Friends”); and other may be freely shared. (Other information, such as geographic position information, may also be shared—subject to such parameters.) In addition to setting sharing parameters based on party, the sharing parameters may also specify sharing based on the content age. For example, content/information older than a year might be shared freely, and content older than a month might be shared with a tier of friends. In other arrangements, fresher content might be the type most liberally shared. E.g., content captured or stored within the past hour, day or week might be shared freely, and content from within the past month or year might be shared with friends. An exception list can identify content—or one or more classes of content—that is treated differently than the above-detailed rules (e.g., never shared or always shared). In addition to sharing content, the computers can also share their respective router and response engine resources across the network. Thus, for example, if computer A does not have a response engine suitable for a certain type of image information, it can pass the information to computer B for handling by its response engine. It will be recognized that such a distributed architecture has a number of advantages, in terms of reduced cost increased reliability. Additionally, the “peer” groupings can be defined geographically, e.g., computers that find themselves within a particular spatial environment (e.g., an area served by a particular WiFi system). The peers can thus establish dynamic, ad hoc subscriptions to content and services from nearby computers. When the computer leaves that environment, the session ends. Some researchers foresee the day when all of our experiences are captured in digital form. Indeed, Gordon Bell at Microsoft has compiled a digital archive of his recent existence through his technologies CyberAll, SenseCam and MyLifeBits. Included Bell's archive are recordings of all telephone calls, video of daily life, captures of all TV and radio consumed, archive of all web pages visited, map data of all places visited, polysomnograms for his sleep apnea, etc., etc., etc. (For further information see, e.g., at Bell, A Digital Life, Scientific American, March, 2007; Gemmell, MyLifeBits: a personal database for everything, Microsoft Research Technical Report MSR-TR-2006-23; Gemmell, Passive Capture and Ensuing Issues for a Personal Lifetime Store, Proceedings of The First ACM Workshop on Continuous Archival and Retrieval of Personal Experiences (CARPE '04), pp. 48-55; Wilkinson, Remember This, The New Yorker, May 27, 2007. See also the other references cited at Gordon's Bell's Microsoft Research web page, and the ACM Special Interest Group web page for CARPE (Capture, Archival & Retrieval of Personal Experiences) web page.) The present technology is well suited for use with such experiential digital content—either as input to a system (i.e., the system responds to the user's present experience), or as a resource from which metadata, habits, and other attributes can be mined (including service in the role of the Flickr archive in the embodiments earlier detailed). In embodiments that employ personal experience as an input, it is initially desirable to have the system trigger and respond only when desired by the user—rather than being constantly free-running (which is currently prohibitive from the standpoint of processing, memory and bandwidth issues). The user's desire can be expressed by a deliberate action by the user, e.g., pushing a button, or making a gesture with head or hand. The system takes data from the current experiential environment, and provides candidate responses. More interesting, perhaps, are systems that determine the user's interest through biological sensors. Electroencephalography, for example, can be used to generate a signal that triggers the system's response (or triggers one of several different responses, e.g., responsive to different stimuli in the current environment). Skin conductivity, pupil dilation, and other autonomous physiological responses can also be optically or electrically sensed, and provide a triggering signal to the system. Eye tracking technology can be employed to identify which object in a field of view captured by an experiential-video sensor is of interest to the user. If Tony is sitting in a bar, and his eye falls on a bottle of unusual beer in front of a nearby woman, the system can identify his point of focal attention, and focus its own processing efforts on pixels corresponding to that bottle. With a signal from Tony, such as two quick eye-blinks, the system can launch an effort to provide candidate responses based on that beer bottle—perhaps also informed by other information gleaned from the environment (time of day, date, ambient audio, etc.) as well as Tony's own personal profile data. (Gaze recognition and related technology is disclosed, e.g., in patent publication 20080211766.) The system may quickly identify the beer as Doppelbock, e.g., by pattern matching from the image (and/or OCR). With that identifier it finds other resources indicating the beer originates from Bavaria, where it is brewed by monks of St. Francis of Paula. Its 9% alcohol content also is distinctive. By checking personal experiential archives that friends have made available to Tony, the system learns that his buddy Geoff is fond of Doppelbock, and most recently drank a bottle in a pub in Dublin. Tony's glancing encounter with the bottle is logged in his own experiential archive, where Geoff may later encounter same. The fact of the encounter may also be real-time-relayed to Geoff in Prague, helping populate an on-going data feed about his friends' activities. The bar may also provide an experiential data server, to which Tony is wirelessly granted access. The server maintains an archive of digital data captured in the bar, and contributed by patrons. The server may also be primed with related metadata & information the management might consider of interest to its patrons, such as the Wikipedia page on the brewing methods of the monks of St Paul, what bands might be playing in weeks to come or what the night's specials are. (Per user preference, some users require that their data be cleared when they leave the bar; others permit the data to be retained.) Tony's system may routinely check the local environment's experiential data server to see what odd bits of information might be found. This time it shows that the woman at barstool 3 (who might employ a range privacy heuristics to know where and with whom to share her information, in this example she might screen her identity from strangers)—the woman with the Doppelbock—has, among her friends, a Tom <last name encrypted>. Tony's system recognizes that Geoff's circle of friends (which Geoff makes available to his friends) includes the same Tom. A few seconds after his double-blink, Tony's cell phone vibrates on his belt. Flipping it open and turning the scroll wheel on the side, Tony reviews a series of screens on which the system presents information it has gathered—with the information it deems most useful to Tony shown first. Equipped with knowledge about this Tony-Geoff-Tom connection (closer than the usual six-degrees-of-separation), and primed with trivia about her Doppelbock beer, Tony picks up his glass and walks down the bar. While P2P networks such as BitTorrent have permitted sharing of audio, image and video content, arrangements like that shown in FIG. 32 allow networks to share a contextually-richer set of experiential content. A basic tenet of P2P networks is that even in the face of technologies that that mine the long-tail of content, the vast majority of users are interested in similar content (the score of tonight's NBA game, the current episode of Lost, etc.) and that given sufficient bandwidth and protocols, the most efficient mechanism to deliver similar content to users not by sending individual streams, but by piecing the content together based on what your “neighbors” have on the network. This same mechanism can be used to provide metadata related to enhancing an experience such as being at the bar drinking a Dopplebock, or watching a highlight of tonight's NBA game on a phone while at the bar. The protocol used in the ad-hoc network described above, might leverage P2P protocols with the experience server providing a peer registration service (similar to early P2P networks) or in a true P2P modality, with all devices in the ad-hoc network advertising what experiences (metadata, content, social connections, etc.) they have available (either for free or for barter of information in-kind, etc.) Within this fabric, Tony's cell phone may simply retrieve the information on Dopplebock by posting the question to the peer network and receive a wealth of information from a variety of devices within the bar or the experience server, without ever knowing the source. Similarly, the experience server may also act as data-recorder, recording the experiences of those within the ad-hoc network, providing a persistence to experience in time & place. Geoff may visit the same bar at some point in the future and see what threads of communication or connections his friend Tony made two weeks earlier, or possibly even leave a note for Tony to retrieve a future time next time he is at the bar. The ability to mine the social threads represented by the traffic on the network, can also enable the proprietors of the bar to augment the experiences of the patrons by orchestrating interaction or introductions. This may include people with shared interests, singles, etc. or in the form of gaming by allowing people to opt-in to theme based games, where patrons piece together clues to find the true identity of someone in the bar or unravel a mystery (similar to the board game Clue). Finally, the demographic information as it relates to audience measurement is of material value to proprietors as they consider which beers to stock next, where to advertise, etc. Still Further Discussion Certain portable devices, such as the Apple iPhone, offer single-button access to pre-defined functions. Among these are viewing prices of favorite stocks, viewing a weather forecast, and viewing a general map of the user's location. Additional functions are available, but the user must undertake a series of additional manipulations, e.g., to reach a favorite web site, etc. An embodiment of the present technology allows these further manipulations to be shortcut by use of certain image snapshots. Snapping a photo of the user's hand can link the user to a babycam back home—delivering real time video of a newborn in a crib. Snapping a photo of a wristwatch can load a map showing traffic conditions along some part of a route on the user's drive home, etc. Such functionality is shown in FIGS. 33-35. A user interface for the portable device includes a set-up/training phase that allows the user to associate different functions with different visual signs. The user is prompted to snap a picture, and enter the URL and name of an action that is to be associated with that picture. (The URL is one type of response; others can also be used—such as launching a JAVA application, etc.) The system then characterizes the snapped image by deriving a set of feature vectors by which similar snapshots can be recognized (e.g., thru pattern/template matching). The feature vectors are stored in a data structure (FIG. 35), in association with the function name and associated URL. In this initial training phase, the user may snap several photos of the same visual sign—perhaps from different distances and perspectives, and with different lighting and backgrounds. The feature extraction algorithm processes the collection to extract a feature set that captures shared similarities of all of the training images. The extraction of image features, and storage of the data structure, can be performed at the portable device, or at a remote device (or in distributed fashion). In later operation, the device can check each image captured by the device for correspondence with one of the stored visual signs. If any is recognized, the corresponding action can be launched. Else, the device responds with the other functions available to the user upon capturing a new image. In another embodiment, the portable device is equipped with two or more shutter buttons. Manipulation of one button captures an image and executes an action—based on a closest match between the captured image and a stored visual sign. Manipulation of another button captures an image without undertaking such an action. The device UI can include a control that presents a visual glossary of signs to the user, as shown in FIG. 34. When activated, thumbnails of different visual signs are presented on the device display, in association with names of the functions earlier stored—reminding the user of the defined vocabulary of signs. The control that launches this glossary of signs can—itself—be an image. One image suitable for this function is a generally featureless frame. An all-dark frame can be achieved by operating the shutter with the lens covered. An all-light frame can be achieved by operating the shutter with the lens pointing at a light source. Another substantially featureless frame (of intermediate density) may be achieved by imaging a patch of skin, or wall, or sky. (To be substantially featureless, the frame should be closer to featureless than matching one of the other stored visual signs. In other embodiments, “featureless” can be concluded if the image has a texture metric below a threshold value.) (The concept of triggering an operation by capturing an all-light frame can be extended to any device function. In some embodiments, repeated all-light exposures alternatively toggle the function on and off. Likewise with all-dark and intermediate density frames. A threshold can be set—by the user with a UI control, or by the manufacturer—to establish how “light” or “dark” such a frame must be in order to be interpreted as a command. For example, 8-bit (0-255) pixel values from a million pixel sensor can be summed. If the sum is less than 900,000, the frame may be regarded as all-dark. If greater than 254 million, the frame may be regarded as all-light. Etc.) One of the other featureless frames can trigger another special response. It can cause the portable device to launch all of the stored functions/URLs (or, e.g., a certain five or ten) in the glossary. The device can cache the resulting frames of information, and present them successively when the user operates one of the phone controls, such as button 16 b or scroll wheel 24 in FIG. 24, or makes a certain gesture on a touch screen. (This function can be invoked by other controls as well.) The third of the featureless frames (i.e., dark, white, or mid-density) can send the device's location to a map server, which can then transmit back multiple map views of the user's location. These views may include aerial views and street map views at different zoom levels, together with nearby street-level imagery. Each of these frames can be cached at the device, and quickly reviewed by turning a scroll wheel or other UI control. The user interface desirably includes controls for deleting visual signs, and editing the name/functionality assigned to each. The URLs can be defined by typing on a keypad, or by navigating otherwise to a desired destination and then saving that destination as the response corresponding to a particular image. Training of the pattern recognition engine can continue through use, with successive images of the different visual signs each serving to refine the template model by which that visual sign is defined. It will be recognized that a great variety of different visual signs can be defined, using resources that are commonly available to the user. A hand can define many different signs, with fingers arranged in different positions (fist, one-through five-fingers, thumb-forefinger OK sign, open palm, thumbs-up, American sign language signs, etc). Apparel and its components (e.g., shoes, buttons) can also be used, as can jewelry. Features from common surroundings (e.g., telephone) may also be used. In addition to launching a particular favorite operation, such techniques can be used as a user interface technique in other situations. For example, a software program or web service may present a list of options to the user. Rather than manipulating a keyboard to enter, e.g., choice #3, the user may snap a picture of three fingers—visually symbolizing the selection. Software recognizes the three finger symbol as meaning the digit 3, and inputs that value to the process. If desired, visual signs can form part of authentication procedures, e.g., to access a bank or social-networking web site. For example, after entering a sign-on name or password at a site, the user may be shown a stored image (to confirm that the site is authentic) and then be prompted to submit an image of a particular visual type (earlier defined by the user, but not now specifically prompted by the site). The web site checks features extracted from the just-captured image for correspondence with an expected response, before permitting the user to access the web site. Other embodiments can respond to a sequence of snapshots within a certain period (e.g., 10 seconds)—a grammar of imagery. An image sequence of “wristwatch,” “four fingers” “three fingers” can set an alarm clock function on the portable device to chime at 7 am. In still other embodiments, the visual signs may be gestures that include motion—captured as a sequence of frames (e.g., video) by the portable device. Context data (e.g., indicating the user's geographic location, time of day, month, etc.) can also be used to tailor the response. For example, when a user is at work, the response to a certain visual sign may be to fetch to an image from a security camera from the user's home. At work, the response to the same sign may be to fetch an image from a security camera at work. In this embodiment, as in others, the response needn't be visual. Audio or other output (e.g., tactile, smell, etc.) can of course be employed. The just-described technology allows a user to define a glossary of visual signs and corresponding customized responses. An intended response can be quickly invoked by photographing a readily-available subject. The captured image can be of low quality (e.g., overexposed, blurry), since it only needs to be classified among, and distinguished from, a relatively small universe of alternatives. Visual Intelligence Pre-Processing Another aspect of the present technology is to perform one or more visual intelligence pre-processing operations on image information captured by a camera sensor. These operations may be performed without user request, and before other image processing operations that the camera customarily performs. FIG. 36 is a simplified diagram showing certain of the processing performed in an exemplary camera, such as a cell phone camera. Light impinges on an image sensor comprising an array of photodiodes. (CCD or CMOS sensor technologies are commonly used.) The resulting analog electrical signals are amplified, and converted to digital form by D/A converters. The outputs of these D/A converters provide image data in its most raw, or “native,” form. The foregoing operations are typically performed by circuitry formed on a common substrate, i.e., “on-chip.” Before other processes can access the image data, one or more other processes are commonly performed. One such further operation is Bayer interpolation (de-mosaicing). The photodiodes of the sensor array typically each captures only a single color of light: red, green or blue (R/G/B), due to a color filter array. This array is comprised of a tiled 2×2 pattern of filter elements: one red, a diagonally-opposite one blue, and the other two green. Bayer interpolation effectively “fills in the blanks” of the sensor's resulting R/G/B mosaic pattern, e.g., providing a red signal where there is a blue filter, etc. Another common operation is white balance correction. This process adjusts the intensities of the component R/G/B colors in order to render certain colors (especially neutral colors) correctly. Other operations that may be performed include gamma correction and edge enhancement. Finally, the processed image data is typically compressed to reduce storage requirements. JPEG compression is most commonly used. The processed, compressed image data is then stored in a buffer memory. Only at this point is the image information commonly available to other processes and services of the cell phone (e.g., by calling a system API). One such process that is commonly invoked with this processed image data is to present the image to the user on the screen of the camera. The user can then assess the image and decide, e.g., whether (1) to save it to the camera's memory card, (2) to transmit it in a picture message, (3) to delete it, etc. Until the user instructs the camera (e.g., through a control in a graphical or button-based user interface), the image stays in the buffer memory. Without further instruction, the only use made of the processed image data is to display same on the screen of the cell phone. FIG. 37 shows an exemplary embodiment of the presently-discussed aspect of the technology. After converting the analog signals into digital native form, one or more other processes are performed. One such process is to perform a Fourier transformation on the native image data. This converts the spatial-domain representation of the image into a frequency-domain representation. A Fourier-domain representation of the native image data can be useful in various ways. One is to screen the image for likely barcode data. As is familiar, a 2D barcode is a checkerboard-like array of light- and dark-squares. The size of the component squares, and thus their repetition spacing, gives a pair of notable peaks in the Fourier-domain representation of the image at a corresponding frequency. (The peaks may be phase-spaced ninety degrees in the UV plane, if the pattern recurs in equal frequency in both the vertical and horizontal directions.) These peaks extend significantly above other image components at nearby image frequencies—with the peaks often having a magnitude twice- to five- or ten-times (or more) that of nearby image frequencies. If the Fourier transformation is done on tiled patches from the image (e.g., patches of 16×16 pixels, or 128×128 pixels, etc), it may be found that certain patches that are wholly within a barcode portion of the image frame have essentially no signal energy except at this characteristic frequency. As shown in FIG. 37, Fourier transform information can be analyzed for telltale signs associated with an image of a barcode. A template-like approach can be used. The template can comprise a set of parameters against which the Fourier transform information is tested—to see if the data has indicia associated with a barcode-like pattern. If the Fourier data is consistent with an image depicting a 2D barcode, corresponding information can be routed for further processing (e.g., sent from the cell phone to a barcode-responsive service). This information can comprise the native image data, and/or the Fourier transform information derived from the image data. In the former case, the full image data needn't be sent. In some embodiments a down-sampled version of the image data, e.g., one-fourth the resolution in both the horizontal and vertical directions, can be sent. Or just patches of the image data having the highest likelihood of depicting part of a barcode pattern can be sent. Or, conversely, patches of the image data having the lowest likelihood of depicting a barcode can not be sent. (These may be patches having no peak at the characteristic frequency, or having a lower amplitude there than nearby.) The transmission can be prompted by the user. For example, the camera UI may ask the user if information should be directed for barcode processing. In other arrangements, the transmission is dispatched immediately upon a determination that the image frame matches the template, indicating possible barcode data. No user action is involved. The Fourier transform data can be tested for signs of other image subjects as well. A 1D barcode, for example, is characterized by a significant amplitude component at a high frequency—(going “across the pickets,” and another significant amplitude spike at a low frequency—going along the pickets. (Significant again means two-or-more times the amplitude of nearby frequencies, as noted above.) Other image contents can also be characterized by reference to their Fourier domain representation, and corresponding templates can be devised. Fourier transform data is also commonly used in computing fingerprints used for automated recognition of media content. The Fourier-Mellin (F-M) transform is also useful in characterizing various image subjects/components—including the barcodes noted above. The F-M transform has the advantage of being robust to scale and rotation of the image subject (scale/rotation invariance). In an exemplary embodiment, if the scale of the subject increases (as by moving the camera closer), the F-M transform pattern shifts up; if the scale decreases, the F-M pattern shifts down. Similarly, if the subject is rotated clockwise, the F-M pattern shifts right; if rotated counter-clockwise, the F-M pattern shifts left. (The particular directions of the shifts can be tailored depending on the implementation.) These attributes make F-M data important in recognizing patterns that may be affine-transformed, such as facial recognition, character recognition, object recognition, etc. The arrangement shown in FIG. 37 applies a Mellin transform to the output of the Fourier transform process, to yield F-M data. The F-M can then be screened for attributes associated with different image subjects. For example, text is characterized by plural symbols of approximately similar size, composed of strokes in a foreground color that contrast with a larger background field. Vertical edges tend to dominate (albeit slightly inclined with italics), with significant energy also being found in the horizontal direction. Spacings between strokes usually fall within a fairly narrow range. These attributes manifest themselves as characteristics that tend to reliably fall within certain boundaries in the F-M transform space. Again, a template can define tests by which the F-M data is screened to indicate the likely presence of text in the captured native image data. If the image is determined to include likely-text, it can be dispatched to a service that handles this type of data (e.g., an optical character recognition, or OCR, engine). Again, the image (or a variant of the image) can be sent, or the transform data can be sent. Just as text manifests itself with a certain set of characteristic attributes in the F-M, so do faces. The F-M data output from the Mellin transform can be tested against a different template to determine the likely presence of a face within the captured image. Likewise, the F-M data can be examined for tell-tale signs that the image data conveys a watermark. A watermark orientation signal is a distinctive signal present in some watermarks that can serve as a sign that a watermark is present. In the examples just given, as in others, the templates may be compiled by testing with known images (e.g., “training”). By capturing images of many different text presentations, the resulting transform data can be examined for attributes that are consistent across the sample set, or (more likely) that fall within bounded ranges. These attributes can then be used as the template by which images containing likely-text are identified. (Likewise for faces, barcodes, and other types of image subjects.) FIG. 37 shows that a variety of different transforms can be applied to the image data. These are generally shown as being performed in parallel, although one or more can be performed sequentially—either all operating on the same input image data, or one transform using an output of a previous transform (as is the case with the Mellin transform). Although not all shown (for clarity of illustration), outputs from each of the other transform processes can be examined for characteristics that suggest the presence of a certain image type. If found, related data is then sent to a service appropriate to that type of image information. In addition to Fourier transform and Mellin transform processes, processes such as eigenface (eigenvector) calculation, image compression, cropping, affine distortion, filtering, DCT transform, wavelet transform, Gabor transform, and other signal processing operations can be applied (all are regarded as transforms). Others are noted elsewhere in this specification. Outputs from these processes are then tested for characteristics indicating that the chance the image depicts a certain class of information, is greater than a random chance. The outputs from some processes may be input to other processes. For example, an output from one of the boxes labeled ETC in FIG. 37 is provided as an input to the Fourier transform process. This ETC box can be, for example, a filtering operation. Sample filtering operations include median, Laplacian, Wiener, Sobel, high-pass, low-pass, bandpass, Gabor, signum, etc. (U.S. Pat. Nos. 6,442,284, 6,516,079, 6,614,914, 6,988,202, 7,013,021 and 7,076,082 show various such filters.) Sometimes a single service may handle different data types, or data that passes different screens. In FIG. 37, for example, a facial recognition service may receive F-M transform data, or eigenface data. Or it may receive image information that has passed one of several different screens (e.g., its F-M transform passed one screen, or its eigenface representation passed a different screen). In some cases, data can be sent to two or more different services. Although not essential, it is desirable that some or all of the processing shown in FIG. 37 be performed by circuitry integrated on the same substrate as the image sensors. (Some of the operations may be performed by programmable hardware—either on the substrate or off—responsive to software instructions.) While the foregoing operations are described as immediately following conversion of the analog sensor signals to digital form, in other embodiments such operations can be performed after other processing operations (e.g., Bayer interpolation, white balance correction, JPEG compression, etc.). Some of the services to which information is sent may be provided locally in the cell phone. Or they can be provided by a remote device, with which the cell phone establishes a link that is at least partly wireless. Or such processing can be distributed among various devices. (While described in the context of conventional CCD and CMOS sensors, this technology is applicable regardless of sensor type. Thus, for example, Foveon and panchromatic image sensors can alternately be used. So can high dynamic range sensors, and sensors using Kodak's Truesense Color Filter Pattern (which add panchromatic sensor pixels to the usual Bayer array of red/green/blue sensor pixels). Sensors with infrared output data can also advantageously be used. For example, infrared output data can be used to identify faces and other image subjects with temperature differentials—aiding in segmenting image subjects within the frame.) It will be recognized that devices employing the FIG. 37 architecture have, essentially, two parallel processing chains. One processing chain produces data to be rendered into perceptual form for use by human viewers. This chain typically includes at least one of a de-mosaic processor and a JPEG image compressor, etc. The second processing chain produces data to be analyzed by one or more machine-implemented algorithms, and in the illustrative example includes a Fourier transform processor, an eigenface processor, etc. By arrangements such as the foregoing, one or more appropriate image-responsive services can begin formulating candidate responses to the visual stimuli before the user has even decided what to do with the captured image. Further Comments on Visual Intelligence Pre-Processing While static image pre-processing was discussed in connection with FIG. 37 (and FIG. 30), such processing can also include temporal aspects, such as motion. Motion is most commonly associated with video, and the techniques detailed herein can be used when capturing video content. However, motion/temporal implications are also present with “still” imagery. For example, some image sensors are read sequentially, top row to bottom row. During the reading operation, the image subject may move within the image frame (i.e., due to camera movement or subject movement). An exaggerated view of this effect is shown in FIG. 40, depicting an imaged “E” captured as the sensor is moved to the left. The vertical stroke of the letter is further from the left edge of the image frame at the bottom than the top, due to movement of the sensor while the pixel data is being clocked-out. The phenomenon also arises when the camera assembles data from several frames to generate a single “still” image. Often unknown to the user, many consumer imaging devices rapidly capture plural frames of image data, and composite different aspects of the data together (using software provided, e.g., by FotoNation, Inc., now Tessera Technologies, Inc.). For example, the device may take three exposures—one exposed to optimize appearance of faces detected in the image frame, another exposed in accordance with the background, and other exposed in accordance with the foreground. These are melded together to create a pleasing montage. (In another example, the camera captures a burst of frames and, in each, determines whether persons are smiling or blinking. It may then select different faces from different frames to yield a final image.) Thus, the distinction between video and still imagery is no longer simply a device modality, but rather is becoming a user modality. Detection of motion can be accomplished in the spatial domain (e.g., by reference to movement of feature pixels between frames), or in a transform domain. Fourier transform and DCT data are exemplary. The system may extract the transform domain signature of an image component, and track its movement across different frames—identifying its motion. One illustrative technique deletes, e.g., the lowest N frequency coefficients—leaving just high frequency edges, etc. (The highest M frequency coefficients may be disregarded as well.) A thresholding operation is performed on the magnitudes of the remaining coefficients—zeroing those below a value (such as 30% of the mean). The resulting coefficients serve as the signature for that image region. (The transform may be based, e.g., on tiles of 8×8 pixels.) When a pattern corresponding to this signature is found at a nearby location within another (or the same) image frame (using known similarity testing, such as correlation), movement of that image region can be identified. In many systems it is desirable to perform a set of processing steps (like those detailed above) that extract information about the incoming content (e.g., image data) in a scalable (e.g., distributed) manner. This extracted information (metadata) is then desirably packaged to facilitate subsequent processing (which may be application specific, or more computationally intense, and can be performed within the originating device or by a remote system). A rough analogy is user interaction with Google. Bare search terms aren't sent to a Google mainframe, as if from a dumb terminal. Instead, the user's computer formats a query as an HTTP request, including the internet protocol address of the originating computer (indicative of location), and makes available cookie information by which user language preferences, desired safe search filtering, etc., can be discerned. This structuring of relevant information serves as a precursor to Google's search process, allowing Google to perform the search process more intelligently—providing faster and better results to the user. FIG. 41 shows some of the metadata that may be involved in an exemplary system. The left-most column of information types may be computed directly from the native image data signals taken from the image sensor. (As noted, some or all of these can be computed using processing arrangements integrated with the sensor on a common substrate.) Additional information may be derived by reference to these basic data types, as shown by the second column of information types. This further information may be produced by processing in the cell phone, or external services can be employed (e.g., the OCR recognition service shown in FIG. 37 can be within the cell phone, or can be a remote server, etc.; similarly with the operations shown in FIG. 30.). How can this information be packaged to facilitate subsequent processing? One alternative is to convey it in the “alpha” channel of common image formats. Most image formats represent imagery by data conveyed in plural channels, or byte-planes. In RGB, for example, one channel conveys red luminance, a second conveys green luminance, and a third conveys blue luminance. Similarly with CMYK (the channels respectively conveying cyan, magenta, yellow, and black information) Ditto with YUV—commonly used with video (a luma, or brightness, channel: Y, and two color channels: U and V), and LAB (also brightness, with two color channels). These imaging constructs are commonly extended to include an additional channel: alpha. The alpha channel is provided to convey opacity information—indicating the extent to which background subjects are visible through the imagery. While commonly supported by image processing file structures, software and systems, the alpha channel is not much used (except, most notably, in computer generated imagery and radiology). Certain implementations of the present technology use the alpha channel to transmit information derived from image data. The different channels of image formats commonly have the same size and bit-depth. In RGB, for example, the red channel may convey 8-bit data (allowing values of 0-255 to be represented), for each pixel in a 640×480 array. Likewise with the green and blue channels. The alpha channel in such arrangements is also commonly 8 bits, and co-extensive with the image size (e.g., 8 bits×640×480). Every pixel thus has a red value, a green value, a blue value, and an alpha value. (The composite image representation is commonly known as RGBA.) A few of the many ways the alpha channel can be used to convey information derived from the image data are shown in FIGS. 42-51, and discussed below. FIG. 42 shows a picture that a user may snap with a cell phone. A processor in the cell phone (on the sensor substrate or elsewhere) may apply an edge detection filter (e.g., a Sobel filter) to the image data, yielding an edge map. Each pixel of the image is either determined to be part of an edge, or not. So this edge information can be conveyed in just one bit plane of the eight bit planes available in the alpha channel. Such an alpha channel payload is shown in FIG. 43. The cell phone camera may also apply known techniques to identify faces within the image frame. The red, green and blue image data from pixels corresponding to facial regions can be combined to yield a grey-scale representation, and this representation can be included in the alpha channel—e.g., in aligned correspondence with the identified faces in the RGB image data. An alpha channel conveying both edge information and greyscale faces is shown in FIG. 44. (An 8-bit greyscale is used for faces in the illustrated embodiment, although a shallower bit-depth, such as 6- or 7-bits, can be used in other arrangements—freeing other bit planes for other information.) The camera may also perform operations to locate the positions of the eyes and mouth in each detected face. Markers can be transmitted in the alpha channel—indicating the scale and positions of these detected features. A simple form of marker is a “smiley face” bit-mapped icon, with the eyes and mouth of the icon located at the positions of the detected eyes and mouth. The scale of the face can be indicated by the length of the iconic mouth, or by the size of a surrounding oval (or the space between the eye markers). The tilt of the face can be indicated by the angle of the mouth (or the angle of the line between the eyes, or the tilt of a surrounding oval). If the cell phone processing yields a determination of the genders of persons depicted in the image, this too can be represented in the extra image channel. For example, an oval line circumscribing the detected face of a female may be made dashed or otherwise patterned. The eyes may be represented as cross-hairs or Xs instead of blackened circles, etc. Ages of depicted persons may also be approximated, and indicated similarly. The processing may also classify each person's emotional state by visual facial clues, and an indication such as surprise/happiness/sadness/anger/neutral can be represented. (See, e.g., Su, “A simple approach to facial expression recognition,” Proceedings of the 2007 Int'l Conf on Computer Engineering and Applications, Queensland, Australia, 2007, pp. 456-461.) When a determination has some uncertainty (such as guessing gender, age range, or emotion), a confidence metric output by the analysis process can also be represented in an iconic fashion, such as by the width of the line, or the scale or selection of pattern elements. FIG. 45 shows different pattern elements that can be used to denote different information, including gender and confidence, in an auxiliary image plane. The portable device may also perform operations culminating in optical character recognition of alphanumeric symbols and strings depicted in the image data. In the illustrated example, the device may recognize the string “LAS VEGAS” in the picture. This determination can be memorialized by a PDF417 2D barcode added to the alpha channel. The barcode can be in the position of the OCR'd text in the image frame, or elsewhere. (PDF417 is exemplary only. Other barcodes—such as 1D, Aztec, Datamatrix, High Capacity Color Barcode, Maxicode, QR Code, Semacode, and ShotCode—or other machine-readable data symbologies—such as OCR fonts and data glyphs—can naturally be used. Glyphs can be used both to convey arbitrary data, and also to form halftone image depictions. See in this regard U.S. Pat. No. 6,419,162, and Hecht, “Printed Embedded Data Graphical User Interfaces,” IEEE Computer Magazine, Vol. 34, No. 3, 2001, pp 47-55.) FIG. 46 shows an alpha channel representation of some of the information determined by the device. All of this information is structured in a manner that allows it to be conveyed within just a single bit plane (of the eight bit planes) of the alpha channel. Information resulting from other of the processing operations (e.g., the analyses shown in FIGS. 30 and 41) may be conveyed in this same bit plane, or in others. While FIGS. 42-46 showed a variety of information that can be conveyed in the alpha channel, and different representations of same, still more are shown in the example of FIGS. 47-49. These involve a cell phone picture of a new GMC truck and its owner. Among other processing, the cell phone in this example processed the image data to recognize the model, year and color of the truck, recognize the text on the truck grill and the owner's t-shirt, recognize the owner's face, and recognize areas of grass and sky. The sky was recognized by its position at the top of the frame, its color histogram within a threshold distance of expected norms, and a spectral composition weak in high frequency coefficients. The grass was recognized by its texture and color. (Other techniques for recognizing these features are taught, e.g., in Batlle, “A review on strategies for recognizing natural objects in colour images of outdoor scenes,” Image and Vision Computing, Volume 18, Issues 6-7, 1 May 2000, pp. 515-530; Hayashi, “Fast Labelling of Natural Scenes Using Enhanced Knowledge,” Pattern Analysis & Applications, Volume 4, Number 1/March, 2001, pp. 20-27; and Boutell, “Improved semantic region labeling based on scene context,” IEEE Int'l Conf. on Multimedia and Expo, July, 2005.) The trees could have been similarly recognized. The human face in the image was detected using arrangements like those commonly employed in consumer cameras. Optical character recognition was performed on a data set resulting from application of an edge detection algorithm to the input image, followed by Fourier and Mellin transforms. (While finding the text GMC and LSU TIGERS, the algorithm failed to identify other text on the t-shirt, and text on the tires. With additional processing time, some of this missing text may have been decoded.) The truck was first classed as a vehicle, and then as a truck, and then finally identified as a Dark Crimson Metallic 2007 GMC Sierra Z-71 with extended cab, by pattern matching. (This detailed identification was obtained through use of known reference truck images, from resources such as the GM trucks web site, Flickr, and a fan site devoted to identifying vehicles in Hollywood motion pictures: IMCDB<dot>com.) FIG. 48 shows an illustrative graphical, bitonal representation of the discerned information, as added to the alpha channel of the FIG. 47 image. (FIG. 49 shows the different planes of the composite image: red, green, blue, and alpha.) The portion of the image area detected as depicting grass is indicated by a uniform array of dots. The image area depicting sky is represented as a grid of lines. (If trees had been particularly identified, they could be labeled using one of the same patterns, but with different size/spacing/etc. Or an entirely different pattern could be used.) The identification of the truck as a Dark Crimson Metallic 2007 GMC Sierra Z-71 with extended cab is encoded in a PDF417 2D barcode—scaled to the size of the truck and masked by its shape. Because PDF417 encodes information redundantly, with error-correction features, the portions of the rectangular barcode that are missing do not prevent the encoded information from being recovered. The face information is encoded in a second PDF417 barcode. This second barcode is oriented at 90 degrees relative to the truck barcode, and is scaled differently, to help distinguish the two distinct symbols to downstream decoders. (Other different orientations could be used, and in some cases are preferable, e.g., 30 degrees, 45 degrees, etc.) The facial barcode is oval in shape, and may be outlined with an oval border (although this is not depicted). The center of the barcode is placed at the mid-point of the person's eyes. The width of the barcode is twice the distance between the eyes. The height of the oval barcode is four times the distance between the mouth and a line joining the eyes. The payload of the facial barcode conveys information discerned from the face. In rudimentary embodiments, the barcode simply indicates the apparent presence of a face. In more sophisticated embodiments, eigenvectors computed from the facial image can be encoded. If a particular face is recognized, information identifying the person can be encoded. If the processor makes a judgment about the likely gender of the subject, this information can be conveyed in the barcode too. Persons appearing in imagery captured by consumer cameras and cell phones are not random: a significant percentage are of recurring subjects, e.g., the owner's children, spouse, friends, the user himself/herself, etc. There are often multiple previous images of these recurring subjects distributed among devices owned or used by the owner, e.g., PDA, cell phone, home computer, network storage, etc. Many of these images are annotated with names of the persons depicted. From such reference images, sets of characterizing facial vectors can be computed, and used to identify subjects in new photos. (As noted, Google's Picasa service works on this principle to identify persons in a user's photo collection.) Such a library of reference facial vectors can be checked to try and identify the person depicted in the FIG. 47 photograph, and the identification can be represented in the barcode. (The identification can comprise the person's name, and/or other identifier(s) by which the matched face is known, e.g., an index number in a database or contact list, a telephone number, a FaceBook user name, etc.) Text recognized from regions of the FIG. 47 image is added to corresponding regions of the alpha channel frame, presented in a reliably decodable OCR font. (OCR-A is depicted although other fonts may be used.) A variety of further information could be included in the FIG. 48 alpha channel. For example, locations in the frame where a processor suspects text is present, but OCRing did not successfully decode alphanumeric symbols (on the tires perhaps, or other characters on the person's shirt), can be identified by adding a corresponding visual clue (e.g., a pattern of diagonal lines). An outline of the person (rather than just an indication of his face) can also be detected by a processor, and indicated by a corresponding border or fill pattern. While the examples of FIGS. 42-46 and FIGS. 47-49 show various different ways of representing semantic metadata in the alpha channel, still more techniques are shown in the example of FIGS. 50-51. Here a user has captured a snapshot of a child at play (FIG. 50). The child's face is turned away from the camera, and is captured with poor contrast. However, even with this limited information, the processor makes a likely identification by referring to the user's previous images: the user's firstborn child Matthew Doe (who seems to be found in countless of the user's archived photos). As shown in FIG. 51, the alpha channel in this example conveys an edge-detected version of the user's image. Superimposed over the child's head is a substitute image of the child's face. This substitute image can be selected for its composition (e.g., depicting two eyes, nose and mouth) and better contrast. In some embodiments, each person known to the system has an iconic facial image that serves as a visual proxy for the person in different contexts. For example, some PDAs store contact lists that include facial images of the contacts. The user (or the contacts) provides facial images that are easily recognized—iconic. These iconic facial images can be scaled to match the head of the person depicted in an image, and added to the alpha channel at the corresponding facial location. Also included in the alpha channel depicted in FIG. 51 is a 2D barcode. This barcode can convey other of the information discerned from processing of the image data or otherwise available (e.g., the child's name, a color histogram, exposure metadata, how many faces were detected in the picture, the ten largest DCT coefficients, etc.). To make the 2D barcode as robust as possible to compression and other image processing operations, its size may not be fixed, but rather is dynamically scaled based on circumstances—such as image characteristics. In the depicted embodiment, the processor analyzes the edge map to identify regions with uniform edginess (i.e., within a thresholded range). The largest such region is selected. The barcode is then scaled and placed to occupy a central area of this region. (In subsequent processing, the edginess where the barcode was substituted can be largely recovered by averaging the edginess at the center points adjoining the four barcode sides.) In another embodiment, region size is tempered with edginess in determining where to place a barcode: low edginess is preferred. In this alternative embodiment, a smaller region of lower edginess may be chosen over a larger region of higher edginess. The size of each candidate region, minus a scaled value of edginess in the region, can serve as a metric to determine which region should host the barcode. This is the arrangement used in FIG. 51, resulting in placement of the barcode in a region to the left of Matthew's head—rather than in a larger, but edgier, region to the right. Although the FIG. 50 photo is relatively “edgy” (as contrasted, e.g., with the FIG. 42 photo), much of the edginess may be irrelevant. In some embodiments the edge data is filtered to preserve only the principal edges (e.g., those indicated by continuous line contours). Within otherwise vacant regions of the resulting filtered edge map a processor can convey additional data. In one arrangement the processor inserts a pattern to indicate a particular color histogram bin into which that region's image colors fall. (In a 64-bin histogram, requiring 64 different patterns, bin 2 may encompass colors in which the red channel has values of 0-63, the green channel has values of 0-63, and the blue channel has a values of 64-127, etc.) Other image metrics can similarly be conveyed. Instead of using different patterns to indicate different data, vacant regions in a filtered edge map can be filled with a noise-like signal—steganographically encoded to convey histogram (or other information) as digital watermark data. (A suitable watermarking technology is detailed in U.S. Pat. No. 6,590,996.) It will be recognized that some of the information in the alpha channel—if visually presented to a human in a graphical form, conveys useful information. From FIG. 43 a human can distinguish a man embracing a woman, in front of a sign stating “WELCOME TO Fabulous LAS VEGAS NEVADA.” From FIG. 44 the human can see greyscale faces, and an outline of the scene. From FIG. 46 the person can additionally identify a barcode conveying some information, and can identify two smiley face icons showing the positions of faces. Likewise, a viewer to whom the frame of graphical information in FIG. 48 is rendered can identify an outline of a person, can read the LSU TIGERS from the person's shirt, and make out what appears to be the outline of a truck (aided by the clue of the GMC text where the truck's grill would be). From presentation of the FIG. 51 alpha channel data a human can identify a child sitting on the floor, playing with toys. The barcode in FIG. 51, like the barcode in FIG. 46, conspicuously indicates to an inspecting human the presence of information, albeit not its content. Other of the graphical content in the alpha channel may not be informative to a human upon inspection. For example, if the child's name is steganographically encoded as a digital watermark in a noise-like signal in FIG. 51, even the presence of information in that noise may go undetected by the person. The foregoing examples detail some of the diversity of semantic information that can be stuffed into the alpha channel, and the diversity of representation constructs that can be employed. Of course, this is just a small sampling; the artisan can quickly adapt these teachings to the needs of particular applications, yielding many other, different embodiments. Thus, for example, any of the information that can be extracted from an image can be memorialized in the alpha channel using arrangements akin to those disclosed herein. It will be recognized that information relating to the image can be added to the alpha channel at different times, by different processors, at different locations. For example, the sensor chip in a portable device may have on-chip processing that performs certain analyses, and adds resulting data to the alpha channel. The device may have another processor that performs further processing—on the image data and/or on the results of the earlier analyses—and adds a representation of those further results to the alpha channel. (These further results may be based, in part, on data acquired wirelessly from a remote source. For example, a consumer camera may link by Bluetooth to the user's PDA, to obtain facial information from the user's contact files.) The composite image file may be transmitted from the portable device to an intermediate network node (e.g., at Verizon, AT&T or T-Mobile), which performs additional processing, and adds its results to the alpha channel. (With its more capable processing hardware, such an intermediate network node can perform more complex, resource-intensive processing—such as more sophisticated facial recognition and pattern matching. With its higher-bandwidth network access, such a node can also employ a variety of remote resources to augment the alpha channel with additional data, e.g., links to Wikipedia entries—or Wikipedia content itself, information from telephone database and image database lookups, etc.) The thus-supplemented image may then be forwarded to an image query service provider (e.g., SnapNow, MobileAcuity, etc.), which can continue the process and/or instruct a responsive action based on the information thus-provided. In the described arrangement the alpha channel thus conveys an iconic view of what all preceding processing has discerned or learned about the image. Each subsequent processor can readily access this information, and contribute still more. All this within the existing workflow channels and constraints of long-established file formats. In some embodiments, the provenance of some or all of the discerned/inferred data is indicated. For example, stored data may indicate that OCRing which yielded certain text was performed by a Verizon server having a unique identifier, such as MAC address of 01-50-F3-83-AB-CC or network identifier PDX-LA002290.corp.verizon-dot-com, on Aug. 28, 2008, 8:35 pm. Such information can be stored in the alpha channel, in header data, in a remote repository to which a pointer is provided, etc. Different processors may contribute to different bit-planes of the alpha channel. A capture device may write its information to bit plane #1. An intermediate node may store its contributions in bit plane #2. Etc. Certain bit planes may be available for shared use. Or different bit planes may be allocated for different classes or types of semantic information. Information relating to faces or persons in the image may always be written to bit plane #1. Information relating to places may always be written to bit plane #2. Edge map data may always be found in bit plane #3, together with color histogram data (e.g., represented in 2D barcode form). Other content labeling (e.g., grass, sand, sky) may be found in bit plane #4, together with OCR'd text. Textual information, such as related links or textual content obtained from the web may be found in bit plane #5. (ASCII symbols may be included as bit patterns, e.g., with each symbol taking 8 bits in the plane. Robustness to subsequent processing can be enhanced by allocating 2 or more bits in the image plane for each bit of ASCII data. Convolutional coding and other error correcting technologies can also be employed. So, too, can error correcting barcodes.) An index to the information conveyed in the alpha channel can be compiled, e.g., in an EXIF header associated with the image, allowing subsequent systems to speed their interpretation and processing of such data. The index can employ XML-like tags, specifying the types of data conveyed in the alpha channel, and optionally other information (e.g., their locations). Locations can be specified as the location of the upper-most bit (or upper-left-most bit) in the bit-plane array, e.g., by X-, Y-coordinates. Or a rectangular bounding box can be specified by reference to a pair X-, Y-coordinates—detailing the region where information is represented. In the example of FIG. 46, the index may convey information such as <MaleFace1> AlphaBitPlane1 (637,938) </MaleFace1> <FemaleFace1> AlphaBitPlane1 (750,1012) </FemaleFace1> <OCRTextPDF417> AlphaBitPlane1 (75,450)-(1425,980) </OCRTextPDF417> <EdgeMap> AlphaBitPlane1 </EdgeMap> This index thus indicates that a male face is found in bit plane #1 of the alpha channel, with a top pixel at location (637,938); a female face is similarly present with a top pixel located at (750,1012); OCR'd text encoded as a PDF417 barcode is found in bit plane #1 in the rectangular area with corner points (75,450) and (1425,980), and that bit plane #1 also includes an edge map of the image. More or less information can naturally be provided. A different form of index, with less information, may specify, e.g.: <AlphaBitPlane1>Face,Face,PDF417,EdgeMap</AlphaBitPlane1> This form of index simply indicates that bit plane #1 of the alpha channel includes 2 faces, a PDF417 barcode, and an edge map. An index with more information may specify data including the rotation angle and scale factor for each face, the LAS VEGAS payload of the PDF417 barcode, the angle of the PDF417 barcode, the confidence factors for subjective determinations, names of recognized persons, a lexicon or glossary detailing the semantic significance of each pattern used in the alpha channels (e.g., the patterns of FIG. 45, and the graphical labels used for sky and grass in FIG. 48), the sources of auxiliary data (e.g., of the superimposed child's face in FIG. 51, or the remote reference image data that served as basis for the conclusion that the truck in FIG. 47 is a Sierra Z71), etc. As can be seen, the index can convey information that is also conveyed in the bit planes of the alpha channel. Generally different forms of representation are used in the alpha channel's graphical representations, versus the index. For example, in the alpha channel the femaleness of the second face is represented by the ‘+’s to represent the eyes; in the index the femaleness is represented by the XML tag <FemaleFace1>. Redundant representation of information can serve as a check on data integrity. Sometimes header information, such as EXIF data, becomes separated from the image data (e.g., when the image is converted to a different format). Instead of conveying index information in a header, a bit plane of the alpha channel can serve to convey the index information, e.g., bit plane #1. One such arrangement encodes the index information as a 2D barcode. The barcode may be scaled to fill the frame, to provide maximum robustness to possible image degradation. In some embodiments, some or all of the index information is replicated in different data stores. For example, it may be conveyed both in EXIF header form, and as a barcode in bit plane #1. Some or all of the data may also be maintained remotely, such as by Google, or other web storage “in the cloud.” Address information conveyed by the image can serve as a pointer to this remote storage. The pointer (which can be a URL, but more commonly is a UID or index into a database which—when queried—returns the current address of the sought-for data) can be included within the index, and/or in one or more of the bit planes of the alpha channel. Or the pointer can be steganographically encoded within the pixels of the image data (in some or all of the composite image planes) using digital watermarking technology. In still other embodiments, some or all the information described above as stored in the alpha channel can additionally, or alternatively, be stored remotely, or encoded within the image pixels as a digital watermark. (The picture itself, with or without the alpha channel, can also be replicated in remote storage, by any device in the processing chain.) Some image formats include more than the four planes detailed above. Geospatial imagery and other mapping technologies commonly represent data with formats that extend to a half-dozen or more information planes. For example, multispectral space-based imagery may have separate image planes devoted to (1) red, (2) green, (3) blue, (4) near infrared, (5) mid-infrared, (6) far infrared, and (7) thermal infrared. The techniques detailed above can convey derived/inferred image information using one or more of the auxiliary data planes available in such formats. As an image moves between processing nodes, some of the nodes may overwrite data inserted by earlier processing. Although not essential, the overwriting processor may copy the overwritten information into remote storage, and include a link or other reference to it in the alpha channel, or index, or image—in case same later is needed. When representing information in the alpha channel, consideration may be given to degradations to which this channel may be subjected. JPEG compression, for example, commonly discards high frequency details that do not meaningfully contribute to a human's perception of an image. Such discarding of information based on the human visual system, however, can work to disadvantage when applied to information that is present for other purposes (although human viewing of the alpha channel is certainly possible and, in some cases, useful). To combat such degradation, the information in the alpha channel is desirably represented by features that would not likely be regarded as visually irrelevant. Different types of information may be represented by different features, so that the most important persist through even severe compression. Thus, for example, the presence of faces in FIG. 46 are signified by bold ovals. The locations of the eyes may be less relevant, so are represented by smaller features. Patterns shown in FIG. 45 may not be reliably distinguished after compression, and so might be reserved to represent secondary information—where loss is less important. With JPEG compression, the most-significant bit-plane is best preserved, whereas lesser-significant bit-planes are increasingly corrupted. Thus, the most important metadata should be conveyed in the most-significant bit planes of the alpha channel—to enhance survivability. If technology of the sort illustrated by FIGS. 42-51 becomes a lingua franca for conveying metadata, image compression might evolve to take its presence into account. For example, JPEG compression may be applied to the red, green and blue image channels, but lossless (or less lossy) compression may be applied to the alpha channel. Since the various bit planes of the alpha channel may convey different information, they may be compressed separately—rather than as bytes of 8-bit depth. (If compressed separately, lossy compression may be more acceptable.) With each bit-plane conveying only bitonal information, compression schemes known from facsimile technology can be used, including Modified Huffman, Modified READ, run length encoding, and ITU-T T.6. Hybrid compression techniques are thus well-suited for such files. Alpha channel conveyance of metadata can be arranged to progressively transmit and decode in general correspondence with associated imagery features, when using compression arrangements such as JPEG 2000. That is, since the alpha channel is presenting semantic information in the visual domain (e.g., iconically), it can be represented so that layers of semantic detail decompress at the same rate as the image. In JPEG 2000, a wavelet transform is used to generate data representing the image. JPEG 2000 packages and processes this transform data in a manner yielding progressive transmission and decoding. For example, when rendering a JPEG 2000 image, the gross details of the image appear first, with successively finer details following. Similarly with transmission. Consider the truck & man image of FIG. 47. Rendering a JPEG 2000 version of this image would first present the low frequency, bold form of the truck. Thereafter the shape of the man would appear. Next, features such as the GMC lettering on the truck grill, and the logo on the man's t-shirt would be distinguished. Finally, the detail of the man's facial features, the grass, the trees, and other high frequency minutiae would complete the rendering of the image. Similarly with transmission. This progression is shown in the pyramid of FIG. 56A. Initially a relatively small amount of information is presented—giving gross shape details. Progressively the image fills in—ultimately ending with a relatively large amount of small detail data. The information in the alpha channel can be arranged similarly. Information about the truck can be represented with a large, low frequency (shape-dominated) symbology. Information indicating the presence and location of the man can be encoded with a next-most-dominant representation. Information corresponding to the GMC lettering on the truck grill, and lettering on the man's shirt, can be represented in the alpha channel with a finer degree of detail. The finest level of salient detail in the image, e.g., the minutiae of the man's face, can be represented with the finest degree of detail in the alpha channel. (As may be noted, the illustrative alpha channel of FIG. 48 doesn't quite follow this model.) If the alpha channel conveys its information in the form of machine-readable symbologies (e.g., barcodes, digital watermarks, glyphs, etc.), the order of alpha channel decoding can be deterministically controlled. Features with the largest features are decoded first; those with the finest features are decoded last. Thus, the alpha channel can convey barcodes at several different sizes (all in the same bit frame, e.g., located side-by-side, or distributed among bit frames). Or the alpha channel can convey plural digital watermark signals, e.g., one at a gross resolution (e.g., corresponding to 10 watermark elements, or “waxels” to the inch), and others at successively finer resolutions (e.g., 50, 100, 150 and 300 waxels per inch). Likewise with data glyphs: a range of larger and smaller sizes of glyphs can be used, and they will decode relatively earlier or later. (JPEG 2000 is the most common of the compression schemes exhibiting progressive behavior, but there are others. JPEG, with some effort, can behave similarly. The present concepts are applicable whenever such progressivity exists.) By such arrangements, as image features are decoded for presentation—or transmitted (e.g., by streaming media delivery), the corresponding metadata becomes available. It will be recognized that results contributed to the alpha channel by the various distributed processing nodes are immediately available to each subsequent recipient of the image. A service provider receiving a processed image, for example, thus quickly understands that FIG. 42 depicts a man and a woman in Las Vegas; that FIG. 43 shows a man and his GMC truck; and that the FIG. 50 image shows a child named Matthew Doe. Edge map, color histogram, and other information conveyed with these images gives the service provider a headstart in its processing of the imagery, e.g., to segment it; recognize its content, etc. Receiving nodes can also use the conveyed data to enhance stored profile information relating to the user. A node receiving the FIG. 46 metadata can note Las Vegas as a location of potential interest. A system receiving the FIG. 48 metadata can infer that GMC Z71 trucks are relevant to the user, and/or to the person depicted in that photo. Such associations can serve as launch points for tailored user experiences. The metadata also allows images with certain attributes to be identified quickly, in response to user queries. (E.g., find pictures showing GMC Siena Z71 trucks.) Desirably, web-indexing crawlers can check the alpha channels of images they find on the web, and add information from the alpha channel to the compiled index to make the image more readily identifiable to searchers. As noted, an alpha channel-based approach is not essential for use of the technologies detailed in this specification. Another alternative is a data structure indexed by coordinates of image pixels. The data structure can be conveyed with the image file (e.g., as EXIF header data), or stored at a remote server. For example, one entry in the data structure corresponding to pixel (637,938) in FIG. 46 may indicate that the pixel forms part of a male's face. A second entry for this pixel may point to a shared sub-data structure at which eigenface values for this face are stored. (The shared sub-data structure may also list all the pixels associated with that face.) A data record corresponding to pixel (622,970) may indicate the pixel corresponds to the left-side eye of the male's face. A data record indexed by pixel (155,780) may indicate that the pixel forms part of text recognized (by OCRing) as the letter “L”, and also falls within color histogram bin 49, etc. The provenance of each datum of information may also be recorded. (Instead of identifying each pixel by X- and Y-coordinates, each pixel may be assigned a sequential number by which it is referenced.) Instead of several pointers pointing to a common sub-data structure from data records of different pixels, the entries may form a linked list, in which each pixel includes a pointer to a next pixel with a common attribute (e.g., associated with the same face). A record for a pixel may include pointers to plural different sub-data structures, or to plural other pixels—to associate the pixel with plural different image features or data. If the data structure is stored remotely, a pointer to the remote store can be included with the image file, e.g., steganographically encoded in the image data, expressed with EXIF data, etc. If any watermarking arrangement is used, the origin of the watermark (see U.S. Pat. No. 6,307,949) can be used as a base from which pixel references are specified as offsets (instead of using, e.g., the upper left corner of the image). Such an arrangement allows pixels to be correctly identified despite corruptions such as cropping, or rotation. As with alpha channel data, the metadata written to a remote store is desirably available for search. A web crawler encountering the image can use the pointer in the EXIF data or the steganographically encoded watermark to identify a corresponding repository of metadata, and add metadata from that repository to its index terms for the image (despite being found at different locations). By the foregoing arrangements it will be appreciated that existing imagery standards, workflows, and ecosystems—originally designed to support just pixel image data, are here employed in support of metadata as well. (Of course, the alpha channel and other approaches detailed in this section are not essential to other aspects of the present technology. For example, information derived or inferred from processes such as those shown in FIGS. 30, 37 and 41 can be sent by other transmission arrangements, e.g., dispatched as packetized data using WiFi or WiMax, transmitted from the device using Bluetooth, sent as an SMS short text or MMS multimedia messages, shared to another node in a low power peer-to-peer wireless network, conveyed with wireless cellular transmission or wireless data service, etc.) Texting, Etc. U.S. Pat. Nos. 5,602,566, 6,115,028, 6,201,554, 6,466,198, 6,573,883, 6,624,824 and 6,956,564, and published PCT application WO9814863, teach that portable computers can be equipped with devices by which tilting can be sensed, and used for different purposes (e.g., scrolling through menus). In accordance with another aspect of the present technology, a tip/tilt interface is used in connection with a typing operation, such as for composing text messages sent by a Simple Message Service (SMS) protocol from a PDA, a cell phone, or other portable wireless device. In one embodiment, a user activates a tip/tilt text entry mode using any of various known means (e.g., pushing a button, entering a gesture, etc.). A scrollable user interface appears on the device screen, presenting a series of icons. Each icon has the appearance of a cell phone key, such as a button depicting the numeral “2” and the letters “abc.” The user tilts the device left or right to scroll backwards or forwards thru the series of icons, to reach a desired button. The user then tips the device towards or away from themselves to navigate between the three letters associated with that icon (e.g., tipping away navigates to “a;” no tipping corresponds to “b;” and tipping towards navigates to “c”). After navigating to the desired letter, the user takes an action to select that letter. This action may be pressing a button on the device (e.g., with the user's thumb), or another action may signal the selection. The user then proceeds as described to select subsequent letters. By this arrangement, the user enters a series of text without the constraints of big fingers on tiny buttons or UI features. Many variations are, of course, possible. The device may have a touch-screen. After navigating to a desired character, the user may tap the touch screen to effect the selection. When tipping/tilting the device, the corresponding letter can be displayed on the screen in an enlarged fashion (e.g., on the icon representing the button, or overlaid elsewhere) to indicate the user's progress in navigation. While accelerometers or other physical sensors are employed in certain embodiments, others use a 2D optical sensor (e.g., a camera). The user can point the sensor to the floor, to a knee, or to another subject, and the device can then sense relative physical motion by sensing movement of features within the image frame (up/down; left right). In such embodiments the image frame captured by the camera need not be presented on the screen; the symbol selection UI, alone, may be displayed. (Or, the UI can be presented as an overlay on the background image captured by the camera.) In camera-based embodiments, as with embodiments employing physical sensors, another dimension of motion may also be sensed: up/down. This can provide an additional degree of control (e.g., shifting to capital letters, or shifting from characters to numbers, or selecting the current symbol, etc). In some embodiments, the device has several modes: one for entering text; another for entering numbers; another for symbols; etc. The user can switch between these modes by using mechanical controls (e.g., buttons), or through controls of a user interface (e.g., touches or gestures or voice commands). For example, while tapping a first region of the screen may select the currently-displayed symbol, tapping a second region of the screen may toggle the mode between character-entry and numeric-entry. Or one tap in this second region can switch to character-entry (the default); two taps in this region can switch to numeric-entry; and three taps in this region can switch to entry of other symbols. Instead of selecting between individual symbols, such an interface can also include common words or phrases (e.g., signature blocks) to which the user can tip/tilt navigate, and then select. There may be several lists of words/phrases. For example, a first list may be standardized (pre-programmed by the device vendor), and include statistically common words. A second list may comprise words and/or phrases that are associated with a particular user (or a particular class of users). The user may enter these words into such a list, or the device can compile the list during operation—determining which words are most commonly entered by the user. (The second list may exclude words found on the first list, or not.) Again, the user can switch between these lists as described above. Desirably, the sensitivity of the tip/tilt interface is adjustable by the user, to accommodate different user preferences and skills While the foregoing embodiments contemplated a limited grammar of tilts/tips, more expansive grammars can be devised. For example, while relative slow tilting of the screen to the left may cause the icons to scroll in a given direction (left, or right, depending on the implementation), a sudden tilt of the screen in that direction can effect a different operation—such as inserting a line (or paragraph) break in the text. A sharp tilt in the other direction can cause the device to send the message. Instead of the speed of tilt, the degree of tilt can correspond to different actions. For example, tilting the device between 5 and 25 degrees can cause the icons to scroll, but tilting the device beyond 30 degrees can insert a line break (if to the left) or can cause the message to be sent (if to the right). Different tip gestures can likewise trigger different actions. The arrangements just described are necessarily only a few of the many different possibilities. Artisans adopting such technology are expected to modify and adapt these teachings as suited for particular applications. Affine Capture Parameters In accordance with another aspect of the present technology, a portable device captures—and may present—geometric information relating to the device's position (or that of a subject). Pending application Ser. No. 11/941,268, filed Nov. 16, 2007 (a counterpart of which was published as WO 2008/061218) teaches various arrangements by which a cell phone can be made responsive to what it “sees,” including overlaying graphical features atop certain imaged objects. The overlay can be warped in accordance with the object's perceived affine distortion. Steganographic calibration signals by which affine distortion of an imaged object can be accurately quantified are detailed, e.g., in U.S. Pat. Nos. 6,614,914 and 6,580,809; and in patent publications US20040105569, US20040101157, and US20060031684. U.S. Pat. No. 6,959,098 teaches how distortion can be characterized by such watermark calibration signals in conjunction with visible image features (e.g., edges of a rectilinear object). From such affine distortion information, the 6D location of a watermarked object (x, y, z, tip, tilt, rotation) relative to the imager of a cell phone can be determined. FIG. 38 shows how a cell phone can display affine parameters (e.g., derived from imagery or otherwise). The camera can be placed in this mode through a UI control (e.g., tapping a physical button, making a touchscreen gesture, etc.) In the depicted arrangement, the device's rotation from (an apparent) horizontal orientation is presented at the top of the cell phone screen. The cell phone processor can make this determination by analyzing the image data for one or more generally parallel elongated straight edge features, averaging them to determine a mean, and assuming that this is the horizon. If the camera is conventionally aligned with the horizon, this mean line will be horizontal. Divergence of this line from horizontal indicates the camera's rotation. This information can be presented textually (e.g., “12 degrees right”), and/or a graphical representation showing divergence from horizontal can be presented. In the illustrated embodiment, the camera captures a sequence of image frames (e.g., video) when in this mode of operation. A second datum indicates the angle by which features in the image frame have been rotated since image capture began. Again, this information can be gleaned by analysis of the image data, and can be presented in text form, and/or graphically. (The graphic can comprise a circle, with a line—or arrow—through the center showing real-time angular movement of the camera to the left or right.) In similar fashion, the device can track changes in the apparent size of edges, objects, and/or other features in the image, to determine the amount by which scale has changed since image capture started. This indicates whether the camera has moved towards or away from the subject, and by how much. Again, the information can be presented textually and graphically. The graphical presentation can comprise two lines: a reference line, and a second, parallel line whose length changes in real time in accordance with the scale change (larger than the reference line for movement of the camera closer to the subject, and smaller for movement away). Although not particularly shown in the exemplary embodiment of FIG. 38, other such geometric data can also be derived and presented, e.g., translation, differential scaling, tip angle (i.e., forward/backward), etc. The determinations detailed above can be simplified if the camera field of view includes a digital watermark having steganographic calibration/orientation data of the sort detailed in the referenced patent documents. However, the information can also be derived from other features in the imagery. Of course, in still other embodiments, data from one or more tilt sensors in the device—either alone or in conjunction with image data—can be used to generate the presented information. In addition to presenting such geometric information on the device screen, such information can also be used, e.g., in sensing gestures made with the device by a user, in providing context by which remote system responses can be customized, etc. Camera-Based Environmental and Behavioral State Machine In accordance with a further aspect of the present technology, a cell phone functions as a state machine, e.g., changing aspects of its functioning based on image-related information previously acquired. The image-related information can be focused on the natural behavior of the camera user, typical environments in which the camera is operated, innate physical characteristics of the camera itself, the structure and dynamic properties of scenes being imaged by the camera, and many other such categories of information. The resulting changes in the camera's function can be directed toward improving image analysis programs resident on a camera-device or remotely located at some image-analysis server. Image analysis is construed very broadly, covering a range of analysis from digital watermark reading, to object and facial recognition, to 2-D and 3-D barcode reading and optical character recognition, all the way through scene categorization analysis and more. A few simple examples will illustrate what is expected to become an important aspect of future mobile devices. Consider the problem of object recognition. Most objects have different appearances, depending on the angle from which they are viewed. If a machine vision object-recognition algorithm is given some information about the perspective from which an object is viewed, it can make a more accurate (or faster) guess of what the object is. People are creatures of habit, including in their use of cell phone cameras. This extends to the hand in which they typically hold the phone, and how they incline it during picture taking. After a user has established a history with a phone, usage patterns may be discerned from the images captured. For example, the user may tend to take photos of subjects not straight-on, but slightly from the right. Such a right-oblique tendency in perspective may be due to the fact that the user routinely holds the camera in the right hand, so exposures are taken from a bit right-of-center. (Right-obliqueness can be sensed in various ways, e.g., by lengths of vertical parallel edges within image frames. If edges tend to be longer on the right sides of the images, this tends to indicate that the images were taken from a right-oblique view. Differences in illumination across foreground subjects can also be used—brighter illumination on the right side of subjects suggest the right side was closer to the lens. Etc.) Similarly, in order to comfortably operate the shutter button of the phone while holding the device, this particular user may habitually adopt a grip of the phone that inclines the top of the camera five degrees towards the user (i.e., to the left). This results in the captured image subjects generally being skewed with an apparent rotation of five degrees to the right. Such recurring biases can be discerned by examining a collection of images captured by that user with that cell phone. Once identified, data memorializing these idiosyncrasies can be stored in a memory, and used to optimize image recognition processes performed by the device. Thus, the device may generate a first output (e.g., a tentative object identification) from a given image frame at one time, but generate a second, different output (e.g., a different object identification) from the same image frame at a later time—due to intervening use of the camera. A characteristic pattern of the user's hand jitter may also be inferred by examination of plural images. For example, by examining pictures of different exposure periods, it may be found that the user has a jitter with a frequency of about 4 Hertz, which is predominantly in the left-right (horizontal) direction. Sharpening filters tailored to that jitter behavior (and also dependent on the length of the exposure) can then be applied to enhance the resulting imagery. In similar fashion, through use, the device may notice that the images captured by the user during weekday hours of 9:00-5:00 are routinely illuminated with a spectrum characteristic of fluorescent lighting, to which a rather extreme white-balancing operation needs to be applied to try and compensate. With a priori knowledge of this tendency, the device can expose photos captured during those hours differently than with its baseline exposure parameters—anticipating the fluorescent illumination, and allowing a better white balance to be achieved. Over time the device derives information that models some aspect of the user's customary behavior. The device then adapts some aspect of its operation accordingly. The device may also adapt to its own peculiarities or degradations. These include non-uniformities in the photodiodes of the image sensor, dust on the image sensor, mars on the lens, etc. Again, over time, the device may detect a recurring pattern, e.g.: (a) that one pixel gives a 2% lower average output signal than adjoining pixels; (b) that a contiguous group of pixels tends to output signals that are about 3 digital numbers lower than averages would otherwise indicate; (c) that a certain region of the photosensor does not seem to capture high frequency detail—imagery in that region is consistently a bit blurry, etc. From such recurring phenomena, the device can deduce, e.g., that (a) the gain for the amplifier serving this pixel is low; (b) dust or other foreign object is occluding these pixels; and (c) a lens flaw prevents light falling in this region of the photosensor from being properly focused, etc. Appropriate compensations can then be applied to mitigate these shortcomings. Common aspects of the subject-matter or “scenes being imaged” is another rich source of information for subsequent image analysis routines, or at least early-stage image processing steps which assist later stage image analysis routines by optimally filtering and/or transforming the pixel data. For example, it may become clear over days and weeks of camera usage that a given user only uses their cameras for three basic interests: digital watermark reading, barcode reading, and visual logging of experimental set-ups in a laboratory. A histogram can be developed over time showing which “end result” operation some given camera usage led toward, followed by an increase in processing cycles devoted to early detections of both watermark and barcode basic characteristics. Drilling a bit deeper here, a Fourier-transformed set of image data may be preferentially routed to a quick 2-D barcode detection function which may otherwise have been de-prioritized Likewise on digital watermark reading, where Fourier transformed data may be shipped to a specialized pattern recognition routine. A partially abstract way to view this state-machine change is that there is only a fixed amount of CPU and image-processing cycles available to a camera device, and choices need to be made on which modes of analysis get what portions of those cycles. An over-simplified representation of such embodiments is shown in FIG. 39. By arrangements such as just-discussed, operation of an imager-equipped device evolves through its continued operation. Focus Issues, Enhanced Print-to-Web Linking Based on Page Layout Cameras currently provided with most cell phones, and other portable PDA-like devices, do not have adjustable focus. Rather, the optics are arranged in compromise fashion—aiming to get a decent image under typical portrait snapshot and landscape circumstances. Imaging at close distances generally yields inferior results—losing high frequency detail. The human visual system has different sensitivity to imagery at different spectral frequencies. Different image frequencies convey different impressions. Low frequencies give global information about an image, such as its orientation and general shape. High frequencies give fine details and edges. As shown in FIG. 52, the sensitivity of the human vision system peaks at frequencies of about 10 cycles/mm on the retina, and falls away steeply on either side. (Perception also depends on contrast between features sought to be distinguished—the vertical axis.) Image features with spatial frequencies and contrast in the cross-hatched zone are usually not perceivable by humans. FIG. 53 shows an image with the low and high frequencies depicted separately (on the left and right). Digital watermarking of print media, such as newspapers, can be effected by tinting the page (before, during or after printing) with an inoffensive background pattern that steganographically conveys auxiliary payload data. Different columns of text can be encoded with different payload data, e.g., permitting each news story to link to a different electronic resource (see, e.g., U.S. Pat. Nos. 6,985,600, 6,947,571 and 6,724,912). In accordance with another aspect of the present technology, the close-focus shortcoming of portable imaging devices is overcome by embedding a lower frequency digital watermark (e.g., with a spectral composition centered on the left side of FIG. 52, above the curve). Instead of encoding different watermarks in different columns, the page is marked with a single watermark that spans the page—encoding an identifier for that page. When a user snaps a picture of a newspaper story of interest (which picture may capture just text/graphics from the desired story/advertisement, or may span other content as well), the watermark of that page is decoded (either locally by the device, remotely by a different device, or in distributed fashion). The decoded watermark serves to index a data structure that returns information to the device, to be presented on its display screen. The display presents a map of the newspaper page layout, with different articles/advertisements shown in different colors. FIGS. 54 and 55 illustrate one particular embodiment. The original page is shown in FIG. 54. The layout map displayed on the user device screen in shown in FIG. 55. To link to additional information about any of the stories, the user simply touches the portion of the displayed map corresponding to the story of interest. (If the device is not equipped with a touch screen, the map of FIG. 55 can be presented with indicia identifying the different map zones, e.g., 1, 2, 3 . . . or A, B, C . . . . The user can then operate the device's numeric or alphanumeric user interface (e.g., keypad) to identify the article of interest.) The user's selection is transmitted to a remote server (which may be the same one that served the layout map data to the portable device, or another one), which then consults with stored data to identify information responsive to the user's selection. For example, if the user touches the region in the lower right of the page map, the remote system may instructs a server at buick<dot>com to transmit a page for presentation on the user device, with more information the about the Buick Lucerne. Or the remote system can send the user device a link to that page, and the device can then load the page. Or the remote system can cause the user device to present a menu of options, e.g., for a news article the user may be given options to: listen to a related podcast; see earlier stories on the same topic; order reprints; download the article as a Word file, etc. Or the remote system can send the user a link to a web page or menu page by email, so that the user can review same at a later time. (A variety of such different responses to user-expressed selections can be provided, as are known from the art cited herein.) Instead of the map of FIG. 55, the system may cause the user device to display a screen showing a reduced scale version of the newspaper page itself—like that shown in FIG. 54. Again, the user can simply touch the article of interest to trigger an associated response. Or instead of a presenting a graphical layout of the page, the remote system can return titles of all the content on the page (e.g., “Banks Owe Billions . . . ”, “McCain Pins Hopes . . . ”, “Buick Lucerne”). These titles are presented in menu form on the device screen, and the user touches the desired item (or enters a corresponding number/letter selection). The layout map for each printed newspaper and magazine page is typically generated by the publishing company as part of its layout process, e.g., using automated software from vendors such as Quark, Impress and Adobe, etc. Existing software thus knows what articles and advertisements appear in what spaces on each printed page. These same software tools, or others, can be adapted to take this layout map information, associate corresponding links or other data for each story/advertisement, and store the resulting data structure in a web-accessible server from which portable devices can access same. The layout of newspaper and magazine pages offers orientation information that can be useful in watermark decoding. Columns are vertical. Headlines and lines of text are horizontal. Even at very low spatial image frequencies, such shape orientation can be distinguished. A user capturing an image of a printed page may not capture the content “squarely.” However, these strong vertical and horizontal components of the image are readily determined by algorithmic analysis of the captured image data, and allow the rotation of the captured image to be discerned. This knowledge simplifies and speeds the watermark decoding process (since a first step in many watermark decoding operations is to discern the rotation of the image from its originally-encoded state). In another embodiment, delivery of a page map to the user device from a remote server is not required. Again, a region of a page spanning several items of content is encoded with a single watermark payload. Again, the user captures an image including content of interest. The watermark identifying the page is decoded. In this embodiment, the captured image is displayed on the device screen, and the user touches the content region of particular interest. The coordinates of the user's selection within the captured image data are recorded. FIG. 56 is illustrative. The user has used an Apple iPhone, a T-Mobile Android phone, or the like to capture an image from an excerpt from a watermarked newspaper page, and then touches an article of interest (indicated by the oval). The location of the touch within the image frame is known to the touch screen software, e.g., as an offset from the upper left corner, measured in pixels. (The display may have a resolution of 480×320 pixels). The touch may be at pixel position (200,160). The watermark spans the page, and is shown in FIG. 56 by the dashed diagonal lines. The watermark (e.g., as described in U.S. Pat. No. 6,590,996) has an origin, but the origin point is not within the image frame captured by the user. However, from the watermark, the watermark decoder software knows the scale of the image and its rotation. It also knows the offset of the captured image frame from the watermark's origin. Based on this information, and information about the scale at which the original watermark was encoded (which information can be conveyed with the watermark, accessed from a remote repository, hard-coded into the detector, etc.), the software can determine that the upper left corner of the captured image frame corresponds to a point 1.6 inches below, and 2.3 inches to the right, of the top left corner of the originally printed page (assuming the watermark origin is at the top left corner of the page). From the decoded scale information, the software can discern that the 480 pixel width of the captured image corresponds to an area of the originally printed page 12 inches in width. The software finally determines the position of the user's touch, as an offset from the upper left corner of the originally-printed page. It knows the corner of the captured image is offset (1.6″,2.3″) from the upper left corner of the printed page, and that the touch is a further 5″ to the right (200 pixels×12″/480 pixels), and a further 4″ down (160 pixels*12″/480 pixels), for a final position with the originally-printed page of (6.6″,6.3″). The device then sends these coordinates to the remote server, together with the payload of the watermark (identifying the page). The server looks up the layout map of the identified page (from an appropriate database in which it was stored by the page layout software) and, by reference to the coordinates, determines in which of the articles/advertisements the user's touch fell. The remote system then returns to the user device responsive information related to the indicated article, as noted above. Returning to focus, the close-focus handicap of PDA cameras can actually be turned to advantage in decoding watermarks. No watermark information is retrieved from inked areas of text. The subtle modulations of luminance on which most watermarks are based are lost in regions that are printed full-black. If the page substrate is tinted with a watermark, the useful watermark information is recovered from those regions of the page that are unprinted, e.g., from “white space” between columns, between lines, at the end of paragraphs, etc. The inked characters are “noise” that is best ignored. The blurring of printed portions of the page introduced by focus deficiencies of PDA cameras can be used to define a mask—identifying areas that are heavily inked. Those portions may be disregarded when decoding watermark data. More particularly, the blurred image data can be thresholded. Any image pixels having a value darker than a threshold value can be ignored. Put another way, only image pixels having a value lighter than a threshold are input to the watermark decoder. The “noise” contributed by the inked characters is thus filtered-out. In imaging devices that capture sharply-focused text, a similar advantage may be produced by processing the text with a blurring kernel—and subtracting out those regions that are thus found to be dominated by printed text. By arrangements such as detailed by the foregoing, deficiencies of portable imaging devices are redressed, and enhanced print-to-web linking based on page layout data is enabled. Feature Extraction, Pattern Matching, Etc. As is familiar to artisans, content-based image retrieval (CBIR) essentially involves (1) abstracting a characterization of an image—usually mathematically; and (2) using such characterizations to assess similarity between images. Two papers surveying these fields are Smeulders et al, “Content-Based Image Retrieval at the End of the Early Years,” IEEE Trans. Pattern Anal. Mach. Intell., Vol. 22, No. 12, pp. 1349-1380, 2000, and Datta et al, “Image Retrieval: Ideas, Influences and Trends of the New Age,” ACM Computing Surveys, Vol. 40, No. 2, April 2008. The task of identifying like-appearing imagery from large image databases is a familiar operation in the issuance of drivers licenses. That is, an image captured from a new applicant is commonly checked against a database of all previous driver license photos, to check whether the applicant has already been issued a driver's license (possibly under another name). Methods and systems known from the driver's license field can be employed in the arrangements detailed herein. Useful in many of the embodiments herein are image feature extraction algorithms known as CEDD and FCTH. The former is detailed in Chatzichristofis et al, “CEDD: Color and Edge Directivity Descriptor—A Compact Descriptor for Image Indexing and Retrieval,” 6th International Conference in advanced research on Computer Vision Systems ICVS 2008, May, 2008; the latter is detailed in Chatzichristofis et al, “FCTH: Fuzzy Color And Texture Histogram—A Low Level Feature for Accurate Image Retrieval” 9th International Workshop on Image Analysis for Multimedia Interactive Services”, Proceedings: IEEE Computer Society, May, 2008. Open-source software implementing these techniques is available; see the web page savvash.blogspot-dot-com/2008/05/cedd-and-fcth-are-now-open-dot-html. DLLs implementing their functionality can be downloaded; the classes can be invoked on input image data (e.g., file.jpg) as follows: double [ ] CEDDTable = new double[144]; double [ ] FCTHTable = new double[144]; Bitmap ImageData = new Bitmap(“c:/file.jpg”); CEDD GetCEDD = new CEDD( ); FCTH GetFCTH = new FCTH( ); CEDDTable = GetCEDD.Apply(ImageData); FCTHTable = GetFCTH.Apply(ImageData,2); CEDD and FCTH can be combined, to yield improved results, using the Joint Composite Descriptor file available from the just-cited web page. Chatzichristofis has made available an open source program “img(Finder)” (see the web page savvash.blogspot-dot-com/2008/07/image-retrieval-in-facebook-dot-html)—a content based image retrieval desktop application that retrieves and indexes images from the FaceBook social networking site, using CEDD and FCTH. In use, a user connects to FaceBook with their personal account data, and the application downloads information from the images of the user, as well as the user's friends' image albums, to index these images for retrieval with the CEDD and FCTH features. The index can thereafter be queried by a sample image. Chatzichristofis has also made available an online search service “img(Anaktisi)” to which a user uploads a photo, and the service searches one of 11 different image archives for similar images—using image metrics including CEDD and FCTH. See orpheus.ee.duth-dot-gr/anaktisi/. (The image archives include Flickr). In the associated commentary to the Anaktisi search service, Chatzichristofis explains: “The rapid growth of digital images through the widespread popularization of computers and the Internet makes the development of an efficient image retrieval technique imperative. Content-based image retrieval, known as CBIR, extracts several features that describe the content of the image, mapping the visual content of the images into a new space called the feature space. The feature space values for a given image are stored in a descriptor that can be used for retrieving similar images. The key to a successful retrieval system is to choose the right features that represent the images as accurately and uniquely as possible. The features chosen have to be discriminative and sufficient in describing the objects present in the image. To achieve these goals, CBIR systems use three basic types of features: color features, texture features and shape features. It is very difficult to achieve satisfactory retrieval results using only one of these feature types. To date, many proposed retrieval techniques adopt methods in which more than one feature type is involved. For instance, color, texture and shape features are used in both IBM's QBIC and MIT's Photobook. QBIC uses color histograms, a moment-based shape feature, and a texture descriptor. Photobook uses appearance features, texture features, and 2D shape features. Other CBIR systems include SIMBA, CIRES, SIMPLIcity, IRMA, FIRE and MIRROR. A cumulative body of research presents extraction methods for these feature types. In most retrieval systems that combine two or more feature types, such as color and texture, independent vectors are used to describe each kind of information. It is possible to achieve very good retrieval scores by increasing the size of the descriptors of images that have a high dimensional vector, but this technique has several drawbacks. If the descriptor has hundreds or even thousands of bins, it may be of no practical use because the retrieval procedure is significantly delayed. Also, increasing the size of the descriptor increases the storage requirements which may have a significant penalty for databases that contain millions of images. Many presented methods limit the length of the descriptor to a small number of bins, leaving the possible factor values in decimal, non-quantized, form. The Moving Picture Experts Group (MPEG) defines a standard for content-based access to multimedia data in their MPEG-7 standard. This standard identifies a set of image descriptors that maintain a balance between the size of the feature and the quality of the retrieval results. In this web-site a new set of feature descriptors is presented in a retrieval system. These descriptors have been designed with particular attention to their size and storage requirements, keeping them as small as possible without compromising their discriminating ability. These descriptors incorporate color and texture information into one histogram while keeping their sizes between 23 and 74 bytes per image. High retrieval scores in content-based image retrieval systems can be attained by adopting relevance feedback mechanisms. These mechanisms require the user to grade the quality of the query results by marking the retrieved images as being either relevant or not. Then, the search engine uses this grading information in subsequent queries to better satisfy users' needs. It is noted that while relevance feedback mechanisms were first introduced in the information retrieval field, they currently receive considerable attention in the CBIR field. The vast majority of relevance feedback techniques proposed in the literature are based on modifying the values of the search parameters so that they better represent the concept the user has in mind. Search parameters are computed as a function of the relevance values assigned by the user to all the images retrieved so far. For instance, relevance feedback is frequently formulated in terms of the modification of the query vector and/or in terms of adaptive similarity metrics. Also, in this web-site an Auto Relevance Feedback (ARF) technique is introduced which is based on the proposed descriptors. The goal of the proposed Automatic Relevance Feedback (ARF) algorithm is to optimally readjust the initial retrieval results based on user preferences. During this procedure the user selects from the first round of retrieved images one as being relevant to his/her initial retrieval expectations. Information from these selected images is used to alter the initial query image descriptor.” Another open source Content Based Image Retrieval system is GIFT (GNU Image Finding Tool), produced by researchers at the University of Geneva. One of the tools allows users to index directory trees containing images. The GIFT server and its client (SnakeCharmer) can then be used to search the indexed images based on image similarity. The system is further described at the web page gnu-dot-org/software/gift/gift-dot-html. The latest version of the software can be found at the ftp server ftp.gnu-dot-org/gnu/gift. Still another open source CBIR system is Fire, written by Tom Deselaers and others at RWTH Aachen University, available for download from the web page-i6.informatik.rwth-aachen-dot-de/˜deselaers/fire/. Fire makes use of technology described, e.g., in Deselaers et al, “Features for Image Retrieval: An Experimental Comparison”, Information Retrieval, Vol. 11, No. 2, The Netherlands, Springer, pp. 77-107, March, 2008. Embodiments of the present invention are generally concerned with objects depicted in imagery, rather than full frames of image pixels. Recognition of objects within imagery (sometimes termed computer vision) is a large science with which the reader is presumed to be familiar. Edges and centroids are among the image features that can be used to aid in recognizing objects in images. Shape contexts are another (c.f., Belongie et al, Matching with Shape Contexts, IEEE Workshop on Content Based Access of Image and Video Libraries, 2000.) Robustness to affine transformations (e.g., scale invariance, rotation invariance) is an advantageous feature of certain object recognition/pattern matching/computer vision techniques. (U.S. Pat. No. 6,711,293 teaches one scale-invariant set of features by which objects and features can be recognized.) Methods based on the Hough transform, and the Fourier Mellin transform, exhibit rotation-invariant properties. In addition to object recognition/computer vision, the processing of imagery contemplated in this specification (as opposed to the processing associated metadata) can use of various other techniques, which can go by various names. Included are image analysis, pattern recognition, feature extraction, feature detection, template matching, facial recognition, eigenvectors, etc. (All these terms are generally used interchangeably in this specification.) The interested reader is referred to Wikipedia, which has an article on each of the just-listed topics, including a tutorial and citations to related information. Excerpts from ca. September, 2008 versions of these Wikipedia articles are appended to the end of priority applications 61/110,490, 61/103,907, and 61/100,643, and form part of the present specification. Image metrics of the sort discussed are sometimes regarded as metadata, namely “content-dependent metadata.” This is in contrast to “content-descriptive metadata”—which is the more familiar sense in which the term metadata is used. More on Image Search and Annotation Image search functionality in certain of the foregoing embodiments can be implemented using Pixsimilar image search software and/or the Visual Search Developer's Kit (SDK), both from Idée, Inc. (Toronto, ON). A tool for automatically generating descriptive annotations for imagery is ALIPR (Automatic Linguistic Indexing of Pictures), as detailed in U.S. Pat. No. 7,394,947. Other Comments The Figures not particularly identified above show aspects of illustrative embodiments or details of the disclosed technology. At the end of this disclosure are listings of further references—detailing technologies and teachings that can be incorporated into the arrangements detailed herein (and into which the technologies and teachings detailed herein can be incorporated). As will be evident to the artisan, different of the actions reviewed in this disclosure can be distributed across different hardware/software platforms. For example, some may be performed on the user's cell phone, while others may be performed on one or more remote servers. Cloud computing can also be employed—referring tasks to services that perform them on hardware whose location and constitution may be unknown to the system and may change over time. In some embodiments, the appropriate response may be determined by reference to data stored in the device—without reference to any external resource. (The registry database used in many operating systems is one place where response-related data for certain inputs can be specified.) Alternatively, the information can be sent to a remote system—for it to determine the response. The information sent from the device may be raw pixels, or an image in compressed form, or a transformed counterpart to an image, or features/metrics extracted from image data, etc. All is regarded as image data. The receiving system can recognize the data type, or it can be expressly identified to the receiving system (e.g., bitmap, eigenvectors, Fourier-Mellin transform data, etc.), and that system can use the data type as one of the inputs in deciding how to process. If the transmitted data is full image data (raw, or in a compressed form), then there will be essentially no duplication in packets received by processing system—essentially every picture is somewhat different. However, if the originating device performs processing on the full image to extract features or metrics, etc., then a receiving system may sometimes receive a packet identical to one it earlier encountered (or nearly so). In this case, the response for that “snap packet” may be recalled from a cache—rather than being determined anew. (The response info may be modified in accordance with user preference information, if available and applicable.) Having described and illustrated the principles of our inventive work with reference to illustrative examples, it will be recognized that the technology is not so limited. For example, while reference has been made to cell phones, it will be recognized that this technology finds utility with all manner of devices—both portable and fixed. PDAs, organizers, portable music players, desktop computers, wearable computers, servers, etc., can all make use of the principles detailed herein. Particularly contemplated cell phones include the Apple iPhone, and cell phones following Google's Android specification (e.g., the G1 phone, manufactured for T-Mobile by HTC Corp.). The term “cell phone” should be construed to encompass all such devices, even those that are not strictly-speaking cellular, nor telephones. The design of cell phones and other computers referenced in this disclosure is familiar to the artisan. In general terms, each includes one or more processors, one or more memories (e.g. RAM), storage (e.g., a disk or flash memory), a user interface (which may include, e.g., a keypad, a TFT LCD or OLED display screen, touch or other gesture sensors, a camera or other optical sensor, a microphone, etc., together with software instructions for providing a graphical user interface), and an interface for communicating with other devices (which may be wireless, such as GSM, CDMA, W-CDMA, CDMA2000, TDMA, EV-DO, HSDPA, WiFi, WiMax, or Bluetooth, and/or wired, such as through an Ethernet local area network, a T-1 internet connection, etc). The functionality detailed above can be implemented by dedicated hardware, or by processors executing software instructions read from a memory or storage, or by combinations thereof. References to “processors” (such as a Fourier transform processor, or an eigenface processor, etc.) should be understood to refer to functionality, rather than any particular form of implementation. Such processors can be dedicated hardware, or software-controlled programmable hardware. Moreover, several such processors can be implemented by a single programmable processor, performing multiple functions. Software instructions for implementing the detailed functionality can be readily authored by artisans, from the descriptions provided herein. Known artificial intelligence systems and techniques can be employed to make the inferences, conclusions, and other determinations noted above. Typically, the devices include operating system software that provides interfaces to hardware devices and general purpose functions, and also include application software which can be selectively invoked to perform particular tasks desired by a user. Known browser software, communications software, and media processing software can be adapted for uses detailed herein. Some embodiments may be implemented as embedded systems—a special purpose computer system in which the operating system software and the application software is indistinguishable to the user (e.g., as is commonly the case in basic cell phones). The functionality detailed in this specification can be implemented in operating system software, application software and/or as embedded system software. Different of the functionality can be implemented on different devices. For example, in a system in which a cell phone communicates with a server at a remote service provider, different tasks can be performed exclusively by one device or the other, or execution can be distributed between the devices. Extraction of eigenvalue data from imagery is but one example of such a task. Thus, it should be understood that description of an operation as being performed by a device is not limiting but exemplary; performance of the operation by another device, or shared between devices, is also expressly contemplated. (Moreover, more than two devices may commonly be employed. E.g., a service provider may refer some tasks, such as image search, object segmentation, and/or image classification, to servers dedicated to such tasks.) As noted, cloud computing can be employed in the present applications. Operations need not be performed exclusively by specifically-identifiable hardware. Rather, some operations can be referred out to other services, which attend to their execution by still further, generally anonymous, systems. Such distributed systems can be large scale (e.g., involving computing resources around the globe), or local (e.g., as when a portable device identifies nearby devices through Bluetooth communication, and involves one or more of the nearby devices in a task—such as contributing data from a local geography; see in this regard U.S. Pat. No. 7,254,406.) In certain embodiments it may be desirable for a capture device to include some form of biometric authentication, such as a fingerprint reader integrated with the shutter button, to assure than a known user is operating the device. Some embodiments can capture several images of a subject, from different perspectives (e.g., a video clip). Algorithms can then be applied to synthesize a 3D model of the imaged subject matter. From such a model new views of the subject may be derived—views that may be more suitable as stimuli to the detailed processes (e.g., avoiding an occluding foreground object). In embodiments using textual descriptors, it is sometimes desirable to augment the descriptors with synonyms, hyponyms (more specific terms) and/or hypernyms (more general terms). These can be obtained from a variety of sources, including the WordNet database compiled by Princeton University. Although many of the embodiments described above are in the context of a cell phone that submits image data to a service provider, triggering a corresponding response, the technology is more generally applicable—whenever processing of imagery or other content occurs. The focus of this disclosure has been on imagery. But the techniques are useful with audio and video. The detailed technology is particularly useful with User Generated Content (UGC) sites, such as YouTube. Videos often are uploaded with little or no metadata. Various techniques are applied to identify same, with differing degrees of uncertainty (e.g., reading watermarks; calculating fingerprints, human reviewers, etc.), and this identification metadata is stored. Further metadata is accumulated based on profiles of users who view the video. Still further metadata can be harvested from later user comments posted about the video. (Related systems and methods in which the present technology can be included are detailed in published patent applications 20080178302, 20080165960, 20080162228, 20080059211, 20080109369, and in application Ser. No. 12/048,072.) By arrangements like that detailed herein, appropriate ad/content pairings can be gleaned, and other enhancements to the users' experience can be offered. Similarly, the technology can be used with audio captured by user devices, and recognition of captured speech. Information gleaned from any of the captured information (e.g., OCR'd text, decoded watermark data, recognized speech), can be used as metadata, for the purposes detailed herein. Multi-media applications of this technology are also contemplated. For example, a user's image may be patterned-matched or GPS-matched to identify a set of similar images in Flickr. Metadata descriptors can be collected from that set of similar images, and used to query a database that includes audio and/or video. Thus, a user capturing and submitting an image of a trail marker on the Appalachian Trail (FIG. 18) may trigger download of the audio track from Aaron Copeland's “Appalachian Spring” orchestral suite to the user's cell phone, or home entertainment system. (About sending content to different destinations that may be associated with a user see, e.g., publication 20070195987.) Watermark decoding can be used in certain embodiments. Technology for encoding/decoding watermarks is detailed, e.g., in U.S. Pat. No. 6,614,914. The present assignee has various patent filings relevant to metadata and its use, which teachings are also relevant in the presently-disclosed contexts. See, e.g., patent publications 20070156726, 20080049971, and 20070266252. Examples of audio fingerprinting are detailed in patent publications 20080276265, 20070124756, U.S. Pat. Nos. 6,990,453 and 7,359,889. Examples of image/video fingerprinting are detailed in patent publications 20070253594 and 20020044659. Although certain aspects of the detailed technology involved processing a large number of images to collect information, it will be recognized that related results can be obtained by having a large number of people (and/or automated processes) consider a single image (e.g., crowd-sourcing). Still greater information and utility can be achieved by combining these two general approaches. The illustrations are meant to be exemplary and not limiting. For example, they sometimes show multiple databases, when a single can be used (and vice-versa). Likewise, some links between the depicted blocks are not shown—for clarity's sake. Contextual data can be used throughout the detailed embodiments to further enhance operation. For example, a process may depend on whether the originating device is a cell phone or a desktop computer; whether the ambient temperature is 30 or 80; the location of, and other information characterizing the user; etc. While the detailed embodiments generally presented candidate results/actions as a series of cached displays on the cell phone screen, between which the user can rapidly switch, in other embodiments this need not be the case. A more traditional single-screen presentation, giving a menu of results, can be used—and the user can press a keypad digit, or highlight a desired option, to make a selection. Or bandwidth may increase sufficiently that the same user experience can be provided without locally caching or buffering data—but rather having it delivered to the cell phone as needed. Geographically-based database methods are detailed, e.g., in patent publication 20030110185. Other arrangements for navigating through image collections, and performing search, are shown in patent publications 20080010276 and 20070110338. It is impossible to expressly catalog the myriad variations and combinations of the technology described herein. Applicants recognize and intend that the concepts of this specification can be combined, substituted and interchanged—both among and between themselves, as well as with those known from the cited prior art. To provide a comprehensive disclosure without unduly lengthening this specification, applicants incorporate-by-reference the patents, patent applications, and other documents cited herein—in their entireties, as well as the documents that they reference. (Such documents are incorporated in their entireties, even if cited above in connection with specific of their teachings.) These references disclose technologies and teachings that can be incorporated into the arrangements detailed herein, and into which the technologies and teachings detailed herein can be incorporated. FACIAL RECOGNITION REFERENCES Blanz, V., and T. Vetter (1999), “A Morphable Model for the Synthesis of 3D Faces”, SIGGRAPH '99 Conference Proceedings (graphics.informatik.uni-freiburg-dot-de/people/volker/publications/morphmod2-dot-pdf) Brunelli, R., and T. Poggio (1993), “Face Recognition: Features versus Templates”, IEEE Transactions on Pattern Analysis and Machine Intelligence, 15 (women.cs.uiuc-dot-edu/techprojectfiles/00254061-dot-pdf) Buntine, W. (1994), “Operations for Learning with Graphical Models”, Journal of Artificial Intelligence Research, 2 (auai.org) Cootes, T., C. Taylor, D. Cooper, and J. Graham (1995), “Active Shape Models—Their Training and Application”, Computer Vision and Image Understanding, 61 (isbe.man.ac.uk/˜bim/Papers/cviu95-dot-pdf) Kirby, M., and L. Sirovich (1990), “Application of the Karhunen-Loeve Procedure for the Characterization of Human Faces”, IEEE Transactions on Pattern Analysis and Machine Intelligence, 12 (camelot.mssm-dot-edu/publications/larry/kl-dot-pdf) Liu, C., and H. Wechsler (2000), “Evolutionary Pursuit and its Application to Face Recognition”, IEEE Transactions on Pattern Analysis and Machine Intelligence, 22 (computer.org/tpami/tp2000/i0570abs-dot-htm) Mitchell, Melanie (1996), An Introduction to Genetic Algorithms, MIT Press. Penev, P., and J. Atick (1996), “Local Feature Analysis: A General Statistical Theory for Object Representation”, Network: Computation in Neural Systems, 7 (neci.nec-dot-com/group/papers/full/LFA/) Potzsch, M., N. Kruger, and C. von der Malsburg (1996), “Improving Object Recognition by Transforming Gabor Filter Responses”, Network: Computation in Neural Systems, 7 (ks.informatik.uni-kiel-dot-de/˜nkr/publications-dot-html) Romdhani, S., V. Blanz, and T. Vetter (2002), “Face Identification by Matching a 3D Morphable Model Using Linear Shape and Texture Error Functions”, Proceedings of the 9th European Conference on Computer Vision (graphics.informatik.uni-freiburg-dot-de/publications/list/romdhani_eccv02-dot-pdf) Turk, M., and A. Pentland (1991), “Eigenfaces for Recognition”, Journal of Cognitive Neuroscience, 3 (cs.ucsb-dot-edu/˜mturk/Papers/jcn-dot-pdf) Vetter, T., and V. Blanz (1998), “Estimating Coloured 3D Face Models from Single Images: An Example-Based Approach”, Proceedings of the 5th European Conference on Computer Vision, Vol. 2 (graphics.informatik.uni-freiburg-dot-de/publications/estimating98-dot-pdf) Wiskott, L., J. Fellous, N. Kruger, and C. von der Malsburg (1999), “Face Recognition by Elastic Bunch Graph Matching” in L. C. Jain, et. al. (eds.), Intelligent Biometric Techniques in Fingerprint and Face Recognition, CRC Press (cnl.salk-dot-edu/˜wiskott/Projects/EGMFaceRecognition-dot-html) Zhao, W., and R. Chellappa (2002), “Image-based Face Recognition: Issues and Methods”, in B. Javidi (ed.), Image Recognition and Classification, Mercel Dekker (cfar.umd-dot-edu/˜wyzhao/publication-dot-html) Zhao, W., R. Chellappa, A. Rosenfeld, and J. Phillips (2002), “Face Recognition: A Literature Survey”, University of Maryland Technical Report CS-TR4167R (cfar.umd-dot-edu/˜wyzhao/publication-dot-html) OTHER REFERENCES Allasia, Audio-Visual Content Analysis in P2P Networks—the SAPIR Approach, 19th Intl Conf. on Database and Expert Systems Application, pp. 610-614, 2008. Ames, Why We Tag—Motivations for Annotation in Mobile and Online Media, ACM CHI '07, April 2007. Aurnhammer, Augmenting Navigation for Collaborative Tagging With Emergent Semantics, ISWC 2006, Springer Lecture Notes in Computer Science, Vol. 4273, pp. 58-71. Bartolini, PIBE—Manage Your Images the Way You Want, IEEE 23rd Intl Conf. on Data Engineering, 2007. Bellucci, Visual Tag Authoring—Picture Extraction Via Localized, Collaborative Tagging, Proc of the Working Conference on Advanced Visual Interfaces, 2008. Borth, Navidgator—Similarity Based Browsing For Image And Video Databases, 31st Annual German Conf. on Artificial Intelligence, 2008. Bressan, Travel Blog Assistant Systems (TBAS)—An Example Scenario of How to Enrich Text With Images and Images With Text Using Online Multimedia Repositories, Xerox Research Centre Europe, 2007. Burgener, Assisted Metadata Propagation—Visualizing Contextual Metadata to Reveal Groupings, University of California Berkeley, 2005. Carvalho, Extracting Semantic Meaning From Photographic Annotations Using A Hybrid Approach, Proc of the 1st Int. Workshop on Metadata Mining for Image Understanding, 2008. Carvalho, Metadata Goes Where Metadata Is—Contextual Networks in the Photographic Domain, Proceedings of the Ph.D. Symposium of the 5th European Semantic Web Conference, 2008. Chandramouli, Query Refinement and User Relevance Feedback for Contextualized Image Retrieval, Proc of the 5th Int. Conf. on Visual Information Engineering, 2008. Datta, Image Retrieval—Ideas, Influences, and Trends of the New Age, ACM Computing Surveys, Vol. 40, No. 2, April 2008. Deselaers, Features for Image Retrieval—An Experimental Comparison, Information Retrieval, Vol. 11, No. 2, the Netherlands, Springer, pp. 77-107, March, 2008. Flank, A Layered Approach to NLP-Based Information Retrieval, International Conference on Computational Linguistics, 1998. Gayo, Combining Collaborative Tagging and Ontologies in Image Retrieval Systems, 2nd Int. Conf. on Metadata and Semantics Research, 2007. Haase, Context for Semantic Metadata, Proc of the 12th ACM Int. Conf. on Multimedia, 2004. Hare, Content-Based Image Retrieval Using a Mobile Device as a Novel Interface, Storage and Retrieval Methods and Applications for Multimedia 2005. Harris, Content Based Image retrieval—Methods and Applications, 4th Annual Multimedia Systems, Electronics and Computer Science Conf., University of Southhampton, 2003. Hunter, Haryana—Harvesting Community Tags to Enrich Collection Metadata, ACM Joint. Conf. on Digital Libraries, June 2008. Kennedy, How Flickr Helps Us Make Sense of the World—Context and Content in Community-Contributed Media Collections, Proc. 15th Intl Conf. on Multimedia, 2007. Kolbitsch, Wordflickr—A Solution to the Vocabulary Problem in Social Tagging Systems, Proceedings of IKNOW '07, 2007. Lam, Semantically Relevant Image Retrieval By Combining Image and Linguistic Analysis, ISVC 2006, Springer Lecture Notes in Computer Science, Vol. 4292, pp. 770-779. Lerman, Personalizing Image Search Results on Flickr, April, 2007. Lux,Web 2.0—User Generated Metadata, Klagenfurt University, 2006. Monaghan, Leveraging Ontologies, Context and Social Networks to Automate Photo Annotation, Springer Lecture Notes in Computer Science, Vol. 4816, 2007. Naaman, Leveraging Geo-Referenced Digital Photographs, Stanford PhD Thesis, July, 2005. Naaman, Zonetag's Collaborative Tag Suggestions—What Is This Person Doing in My Phone, IEEE Multimedia, Vol. 15, No. 3, 2008. Owen, A Comparison of Systems for Content-Based Image Retrieval, 4th Annual Multimedia Systems, Electronics and Computer Science Conference, University of Southampton, 2003. Peters, Folksonomy and Information Retrieval, Proceedings of the 70th ASIS&T Annual Meeting, Vol. 44, 2007. Reddy, Image Browsing, Processing, and Clustering for Participatory Sensing—Lessons From A DietSense Prototype, ACM EmNets Conf., June, 2007. Renn, Automatic Image Tagging Using Community-Driven Online Image Databases, Proc. of 6th Int. Workshop on Adaptive Multimedia Retrieval, 2008 Rose, Anvil—A System for the Retrieval of Captioned Images Using NLP Techniques, CIR2000, 3d UK Conf. in Image Retrieval, 2000. Shevade, Modeling Personal and Social Network Context for Event Annotation in Images, ACM JoInt. Conf. on Digital Libraries, June 2007. Smeaton, Experiments on Using Semantic Distances Between Words in Image Caption Retrieval, Dublin City University, School of Computer Applications, 1996. Smeaton, Content vs. Context for Multimedia Semantics—the Case of SenseCam Image Structuring, Springer Lecture Notes in Computer Science, Vol. 4306, pp. 1-10, 2006. Spaniol, Imagesemantics−User-Generated Metadata, Content Based Retrieval & Beyond, J. of Universal Computer Science, Vol. 14, No. 9, 2008. Tojo, Flickring Our World—An Approach for A Graph Based Exploration of the Flickr Community, Collective Intelligence and the Semantic Web Conference, June, 2008. Torniai, Sharing, Discovering and Browsing Geotagged Pictures on the Web, HP Technical Report HPL-2007-73, May, 2007. Urena-Lopez, the Multimodal Nature of the Web—New Trends in Information Access, Upgrade, Vol. VIII, No. 1, Jan. 2007. Vaughan-Nichols, Researchers Make Web Searches More Intelligent, IEEE Computer, December, 2006. Veltkamp, Content-Based Image Retrieval Systems—A Survey, Expanded Version of Technical Report UU-CS-2000-34; 2002. Videosurf Takes Search Inside Video, LA Times, 10 Sep. 2008. Wenyin, Ubiquitous Media Agents—A Frame Work for Managing Personally Accumulated Multimedia Files, Multimedia Systems, Vol. 9, No. 2, August, 2003. Zunjarwad, Contextual Wisdom—Social Relations and Correlations for Multimedia Event Annotation, Int. Multimedia Conf, September 2007.
